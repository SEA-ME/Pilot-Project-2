<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="dbus-hash_8h" kind="file" language="C++">
    <compoundname>dbus-hash.h</compoundname>
    <includes refid="dbus-memory_8h" local="no">dbus/dbus-memory.h</includes>
    <includes refid="dbus-types_8h" local="no">dbus/dbus-types.h</includes>
    <includes refid="dbus-sysdeps_8h" local="no">dbus/dbus-sysdeps.h</includes>
    <includedby refid="dbus-connection_8c" local="yes">dbus-connection.c</includedby>
    <includedby refid="dbus-sysdeps-win_8h" local="yes">dbus-sysdeps-win.h</includedby>
    <includedby refid="dbus-hash_8c" local="yes">dbus-hash.c</includedby>
    <includedby refid="dbus-object-tree_8c" local="yes">dbus-object-tree.c</includedby>
    <includedby refid="dbus-server-debug-pipe_8c" local="yes">dbus-server-debug-pipe.c</includedby>
    <includedby refid="dbus-sysdeps-win_8c" local="yes">dbus-sysdeps-win.c</includedby>
    <includedby refid="dbus-userdb_8c" local="yes">dbus-userdb.c</includedby>
    <incdepgraph>
      <node id="1050">
        <label>stdarg.h</label>
      </node>
      <node id="1044">
        <label>stdint.h</label>
      </node>
      <node id="1041">
        <label>dbus/dbus-types.h</label>
        <link refid="dbus-types_8h_source"/>
        <childnode refid="1040" relation="include">
        </childnode>
        <childnode refid="1042" relation="include">
        </childnode>
      </node>
      <node id="1052">
        <label>sys/poll.h</label>
      </node>
      <node id="1040">
        <label>stddef.h</label>
      </node>
      <node id="1049">
        <label>dbus/dbus-string.h</label>
        <link refid="dbus-string_8h_source"/>
        <childnode refid="1039" relation="include">
        </childnode>
        <childnode refid="1041" relation="include">
        </childnode>
        <childnode refid="1038" relation="include">
        </childnode>
        <childnode refid="1050" relation="include">
        </childnode>
      </node>
      <node id="1051">
        <label>string.h</label>
      </node>
      <node id="1038">
        <label>dbus/dbus-memory.h</label>
        <link refid="dbus-memory_8h_source"/>
        <childnode refid="1039" relation="include">
        </childnode>
        <childnode refid="1040" relation="include">
        </childnode>
      </node>
      <node id="1046">
        <label>dbus/dbus-errors.h</label>
        <link refid="dbus-errors_8h_source"/>
        <childnode refid="1039" relation="include">
        </childnode>
        <childnode refid="1041" relation="include">
        </childnode>
        <childnode refid="1047" relation="include">
        </childnode>
      </node>
      <node id="1039">
        <label>dbus/dbus-macros.h</label>
        <link refid="dbus-macros_8h_source"/>
      </node>
      <node id="1047">
        <label>dbus/dbus-protocol.h</label>
        <link refid="dbus-protocol_8h_source"/>
      </node>
      <node id="1043">
        <label>dbus/dbus-sysdeps.h</label>
        <link refid="dbus-sysdeps_8h_source"/>
        <childnode refid="1044" relation="include">
        </childnode>
        <childnode refid="1045" relation="include">
        </childnode>
        <childnode refid="1046" relation="include">
        </childnode>
        <childnode refid="1048" relation="include">
        </childnode>
        <childnode refid="1049" relation="include">
        </childnode>
        <childnode refid="1051" relation="include">
        </childnode>
        <childnode refid="1050" relation="include">
        </childnode>
        <childnode refid="1052" relation="include">
        </childnode>
        <childnode refid="1053" relation="include">
        </childnode>
      </node>
      <node id="1048">
        <label>dbus/dbus-file.h</label>
        <link refid="dbus-file_8h_source"/>
        <childnode refid="1049" relation="include">
        </childnode>
        <childnode refid="1046" relation="include">
        </childnode>
      </node>
      <node id="1037">
        <label>dbus-hash.h</label>
        <link refid="dbus-hash_8h"/>
        <childnode refid="1038" relation="include">
        </childnode>
        <childnode refid="1041" relation="include">
        </childnode>
        <childnode refid="1043" relation="include">
        </childnode>
      </node>
      <node id="1053">
        <label>config.h</label>
      </node>
      <node id="1042">
        <label>dbus/dbus-arch-deps.h</label>
        <link refid="dbus-arch-deps_8h_source"/>
        <childnode refid="1039" relation="include">
        </childnode>
      </node>
      <node id="1045">
        <label>inttypes.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1057">
        <label>dbus-file-win.c</label>
        <link refid="dbus-file-win_8c_source"/>
      </node>
      <node id="1067">
        <label>dbus-userdb.c</label>
        <link refid="dbus-userdb_8c_source"/>
      </node>
      <node id="1065">
        <label>dbus-object-tree.c</label>
        <link refid="dbus-object-tree_8c_source"/>
      </node>
      <node id="1061">
        <label>dbus-sysdeps-win.c</label>
        <link refid="dbus-sysdeps-win_8c_source"/>
      </node>
      <node id="1056">
        <label>dbus-sysdeps-win.h</label>
        <link refid="dbus-sysdeps-win_8h_source"/>
        <childnode refid="1057" relation="include">
        </childnode>
        <childnode refid="1058" relation="include">
        </childnode>
        <childnode refid="1059" relation="include">
        </childnode>
        <childnode refid="1060" relation="include">
        </childnode>
        <childnode refid="1061" relation="include">
        </childnode>
        <childnode refid="1062" relation="include">
        </childnode>
        <childnode refid="1063" relation="include">
        </childnode>
      </node>
      <node id="1062">
        <label>dbus-sysdeps-wince-glue.c</label>
        <link refid="dbus-sysdeps-wince-glue_8c_source"/>
      </node>
      <node id="1058">
        <label>dbus-spawn-win.c</label>
        <link refid="dbus-spawn-win_8c_source"/>
      </node>
      <node id="1060">
        <label>dbus-sysdeps-util-win.c</label>
        <link refid="dbus-sysdeps-util-win_8c_source"/>
      </node>
      <node id="1066">
        <label>dbus-server-debug-pipe.c</label>
        <link refid="dbus-server-debug-pipe_8c_source"/>
      </node>
      <node id="1063">
        <label>dbus-transport-win.c</label>
        <link refid="dbus-transport-win_8c_source"/>
      </node>
      <node id="1059">
        <label>dbus-sysdeps-thread-win.c</label>
        <link refid="dbus-sysdeps-thread-win_8c_source"/>
      </node>
      <node id="1064">
        <label>dbus-hash.c</label>
        <link refid="dbus-hash_8c_source"/>
      </node>
      <node id="1054">
        <label>dbus-hash.h</label>
        <link refid="dbus-hash_8h"/>
        <childnode refid="1055" relation="include">
        </childnode>
        <childnode refid="1056" relation="include">
        </childnode>
        <childnode refid="1064" relation="include">
        </childnode>
        <childnode refid="1065" relation="include">
        </childnode>
        <childnode refid="1066" relation="include">
        </childnode>
        <childnode refid="1061" relation="include">
        </childnode>
        <childnode refid="1067" relation="include">
        </childnode>
      </node>
      <node id="1055">
        <label>dbus-connection.c</label>
        <link refid="dbus-connection_8c_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structDBusHashIter" prot="public">DBusHashIter</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__DBusHashTable_1ga81d2f0358c7a2430fcc12640bcd46cb1" prot="public" static="no">
        <name>DBUS_HASH_POLLABLE</name>
        <initializer><ref refid="group__DBusHashTable_1ggab0ab9767ffa5b6720a13b3d741630852a26446bd9fbb15c6c381b35a810207141" kindref="member">DBUS_HASH_INT</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-hash.h" line="155" column="11" bodyfile="dbus/dbus-hash.h" bodystart="155" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__DBusHashTable_1gab0ab9767ffa5b6720a13b3d741630852" prot="public" static="no">
        <name>DBusHashType</name>
        <enumvalue id="group__DBusHashTable_1ggab0ab9767ffa5b6720a13b3d741630852a481fd0166d28da725b3e97f15192434e" prot="public">
          <name>DBUS_HASH_STRING</name>
          <briefdescription>
<para>Hash keys are strings. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__DBusHashTable_1ggab0ab9767ffa5b6720a13b3d741630852a26446bd9fbb15c6c381b35a810207141" prot="public">
          <name>DBUS_HASH_INT</name>
          <briefdescription>
<para>Hash keys are integers. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__DBusHashTable_1ggab0ab9767ffa5b6720a13b3d741630852a477caf35cc3676d6412c9b57f1d0f6c7" prot="public">
          <name>DBUS_HASH_UINTPTR</name>
          <briefdescription>
<para>Hash keys are integer capable to hold a pointer. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Indicates the type of a key in the hash table. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-hash.h" line="68" column="1" bodyfile="dbus/dbus-hash.h" bodystart="67" bodyend="72"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__DBusHashTable_1gae11437504d2f1ec62272264214968988" prot="public" static="no">
        <type>struct <ref refid="structDBusHashTable" kindref="compound">DBusHashTable</ref></type>
        <definition>DBusHashTable</definition>
        <argsstring></argsstring>
        <name>DBusHashTable</name>
        <briefdescription>
<para>Public opaque hash table object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-hash.h" line="222" column="1" bodyfile="dbus/dbus-hash.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__DBusHashTable_1gae8ee983d1bea5d9c49dab9714bc91a68" prot="public" static="no">
        <type>struct <ref refid="structDBusHashIter" kindref="compound">DBusHashIter</ref></type>
        <definition>DBusHashIter</definition>
        <argsstring></argsstring>
        <name>DBusHashIter</name>
        <briefdescription>
<para>Public opaque hash table iterator object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-hash.h" line="222" column="1" bodyfile="dbus/dbus-hash.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__DBusHashTable_1ga175dc6ab841ed32bb6acf6e4c0df36a8" prot="public" static="no">
        <type>struct <ref refid="group__DBusHashTable_1ga175dc6ab841ed32bb6acf6e4c0df36a8" kindref="member">DBusPreallocatedHash</ref></type>
        <definition>typedef struct DBusPreallocatedHash DBusPreallocatedHash</definition>
        <argsstring></argsstring>
        <name>DBusPreallocatedHash</name>
        <briefdescription>
<para>A preallocated hash entry. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-hash.h" line="134" column="1" bodyfile="dbus/dbus-hash.h" bodystart="139" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__DBusHashTable_1ga7aa7b6054c5fbf8852bad79d372580dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structDBusHashTable" kindref="compound">DBusHashTable</ref> *</type>
        <definition>DBUS_PRIVATE_EXPORT DBusHashTable * _dbus_hash_table_new</definition>
        <argsstring>(DBusHashType type, DBusFreeFunction key_free_function, DBusFreeFunction value_free_function)</argsstring>
        <name>_dbus_hash_table_new</name>
        <param>
          <type><ref refid="group__DBusHashTable_1gab0ab9767ffa5b6720a13b3d741630852" kindref="member">DBusHashType</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="group__DBusMemory_1ga061bcded226d76c7d7de35beaa165cb5" kindref="member">DBusFreeFunction</ref></type>
          <declname>key_free_function</declname>
        </param>
        <param>
          <type><ref refid="group__DBusMemory_1ga061bcded226d76c7d7de35beaa165cb5" kindref="member">DBusFreeFunction</ref></type>
          <declname>value_free_function</declname>
        </param>
        <briefdescription>
<para>Constructs a new hash table. </para>        </briefdescription>
        <detaileddescription>
<para>Should be freed with <ref refid="group__DBusHashTable_1ga5ba600e4a4ea0dac1ab3f2bbf9e1665e" kindref="member">_dbus_hash_table_unref()</ref>. If memory cannot be allocated for the hash table, returns <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>the type of hash key to use. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key_free_function</parametername>
</parameternamelist>
<parameterdescription>
<para>function to free hash keys. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value_free_function</parametername>
</parameternamelist>
<parameterdescription>
<para>function to free hash values. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a new <ref refid="structDBusHashTable" kindref="compound">DBusHashTable</ref> or <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref> if no memory. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-hash.c" line="285" column="1" bodyfile="dbus/dbus-hash.c" bodystart="285" bodyend="337"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="148">_dbus_assert</references>
        <references refid="group__DBusMemPool_1gaf1bae02bc5fcb879f77ff2c13ca03ac8" compoundref="dbus-mempool_8c" startline="138" endline="179">_dbus_mem_pool_new</references>
        <references refid="group__DBusInternalsUtils_1gac153abad46f4eb80999a2b340d29d1f0" compoundref="dbus-internals_8h" startline="189">_DBUS_N_ELEMENTS</references>
        <references refid="structDBusHashTable_1a1f974e2cb3038685b3edf493406ad99d" compoundref="dbus-hash_8c" startline="171">DBusHashTable::buckets</references>
        <references refid="group__DBusMemory_1ga34e666b19b015035a9a31e53da84b39a" compoundref="dbus-memory_8c" startline="701" endline="740">dbus_free</references>
        <references refid="group__DBusHashTable_1ggab0ab9767ffa5b6720a13b3d741630852a26446bd9fbb15c6c381b35a810207141" compoundref="dbus-hash_8h" startline="70">DBUS_HASH_INT</references>
        <references refid="group__DBusHashTable_1ggab0ab9767ffa5b6720a13b3d741630852a477caf35cc3676d6412c9b57f1d0f6c7" compoundref="dbus-hash_8h" startline="71">DBUS_HASH_UINTPTR</references>
        <references refid="group__DBusMemory_1gaba9d823abda7f4cadbaf5177d3b8b793" compoundref="dbus-memory_8h" startline="59">dbus_new0</references>
        <references refid="group__DBusHashTableInternals_1ga4518324f3c3caacf5694065f4f6071d8" compoundref="dbus-hash_8c" startline="130">DBUS_SMALL_HASH_TABLE</references>
        <references refid="structDBusHashTable_1a2e7e7b92bb9633ab95cfaa592b89025c" compoundref="dbus-hash_8c" startline="191">DBusHashTable::down_shift</references>
        <references refid="structDBusHashTable_1ad1224e6c3c632afb265b78f8f6e30f97" compoundref="dbus-hash_8c" startline="206">DBusHashTable::entry_pool</references>
        <references refid="structDBusHashTable_1ab98bafddf1b1ce1dad01c5595e278e35" compoundref="dbus-hash_8c" startline="201">DBusHashTable::find_function</references>
        <references refid="structDBusHashTable_1a29c408110c0d189d89b60c6c01cfb0cf" compoundref="dbus-hash_8c" startline="185">DBusHashTable::hi_rebuild_size</references>
        <references refid="structDBusHashTable_1a28f326a2947b6be0b0b852db376a1092" compoundref="dbus-hash_8c" startline="198">DBusHashTable::key_type</references>
        <references refid="structDBusHashTable_1aae6ea7cb15d618866854b2b6bd468419" compoundref="dbus-hash_8c" startline="188">DBusHashTable::lo_rebuild_size</references>
        <references refid="structDBusHashTable_1aec1230eebce3d256ca9ceebe372647e9" compoundref="dbus-hash_8c" startline="195">DBusHashTable::mask</references>
        <references refid="structDBusHashTable_1a2dd2b9389d65d30e31e596dd786a9aa7" compoundref="dbus-hash_8c" startline="179">DBusHashTable::n_buckets</references>
        <references refid="structDBusHashTable_1affbf11a9c3dd72d55b7976891f7b4650" compoundref="dbus-hash_8c" startline="182">DBusHashTable::n_entries</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="group__DBusHashTableInternals_1ga8c6d6296d450e37074dbd8c15638b499" compoundref="dbus-hash_8c" startline="104">REBUILD_MULTIPLIER</references>
        <references refid="structDBusHashTable_1acb2b7bcba65da77f7ecf67da355ff770" compoundref="dbus-hash_8c" startline="169">DBusHashTable::refcount</references>
        <references refid="structDBusHashTable_1af71877d64657c34a783caf6b82b016e9" compoundref="dbus-hash_8c" startline="175">DBusHashTable::static_buckets</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <referencedby refid="group__DBusConnectionInternals_1ga2cdffe9215251b69cb39ff36b9f50e6c" compoundref="dbus-connection_8c" startline="1249" endline="1409">_dbus_connection_new_for_transport</referencedby>
        <referencedby refid="group__DBusHashTable_1ga06555357f633c4020bbb5b78f701b39d" compoundref="dbus-hash_8c" startline="1397" endline="1400">_dbus_hash_table_get_n_entries</referencedby>
        <referencedby refid="group__DBusInternalsUtils_1ga1dbf2c80952d17707c544f5d86dd8545" compoundref="dbus-userdb_8c" startline="550" endline="587">_dbus_user_database_new</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusHashTable_1ga4ad4622378885e5d911c26956e174a45" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structDBusHashTable" kindref="compound">DBusHashTable</ref> *</type>
        <definition>DBusHashTable * _dbus_hash_table_ref</definition>
        <argsstring>(DBusHashTable *table)</argsstring>
        <name>_dbus_hash_table_ref</name>
        <param>
          <type><ref refid="structDBusHashTable" kindref="compound">DBusHashTable</ref> *</type>
          <declname>table</declname>
        </param>
        <briefdescription>
<para>Increments the reference count for a hash table. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>table</parametername>
</parameternamelist>
<parameterdescription>
<para>the hash table to add a reference to. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the hash table. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-hash.c" line="347" column="1" bodyfile="dbus/dbus-hash.c" bodystart="347" bodyend="352"/>
        <references refid="structDBusHashTable_1acb2b7bcba65da77f7ecf67da355ff770" compoundref="dbus-hash_8c" startline="169">DBusHashTable::refcount</references>
        <referencedby refid="group__DBusHashTable_1ga06555357f633c4020bbb5b78f701b39d" compoundref="dbus-hash_8c" startline="1397" endline="1400">_dbus_hash_table_get_n_entries</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusHashTable_1ga5ba600e4a4ea0dac1ab3f2bbf9e1665e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>DBUS_PRIVATE_EXPORT void _dbus_hash_table_unref</definition>
        <argsstring>(DBusHashTable *table)</argsstring>
        <name>_dbus_hash_table_unref</name>
        <param>
          <type><ref refid="structDBusHashTable" kindref="compound">DBusHashTable</ref> *</type>
          <declname>table</declname>
        </param>
        <briefdescription>
<para>Decrements the reference count for a hash table, freeing the hash table if the count reaches zero. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>table</parametername>
</parameternamelist>
<parameterdescription>
<para>the hash table to remove a reference from. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-hash.c" line="361" column="1" bodyfile="dbus/dbus-hash.c" bodystart="361" bodyend="410"/>
        <references refid="structDBusHashTable_1a1f974e2cb3038685b3edf493406ad99d" compoundref="dbus-hash_8c" startline="171">DBusHashTable::buckets</references>
        <references refid="structDBusHashTable_1a2dd2b9389d65d30e31e596dd786a9aa7" compoundref="dbus-hash_8c" startline="179">DBusHashTable::n_buckets</references>
        <references refid="structDBusHashEntry_1ae986e25c0b24237f9848ff43aa1d8501" compoundref="dbus-hash_8c" startline="145">DBusHashEntry::next</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="structDBusHashTable_1acb2b7bcba65da77f7ecf67da355ff770" compoundref="dbus-hash_8c" startline="169">DBusHashTable::refcount</references>
        <referencedby refid="group__DBusHashTable_1ga06555357f633c4020bbb5b78f701b39d" compoundref="dbus-hash_8c" startline="1397" endline="1400">_dbus_hash_table_get_n_entries</referencedby>
        <referencedby refid="group__DBusInternalsUtils_1ga55dbb78c415da040037442eca4c4e80e" compoundref="dbus-userdb_8c" startline="623" endline="644">_dbus_user_database_unref</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusHashTable_1gad169f3790ca67f8a0adafcdc88ef7188" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _dbus_hash_table_remove_all</definition>
        <argsstring>(DBusHashTable *table)</argsstring>
        <name>_dbus_hash_table_remove_all</name>
        <param>
          <type><ref refid="structDBusHashTable" kindref="compound">DBusHashTable</ref> *</type>
          <declname>table</declname>
        </param>
        <briefdescription>
<para>Removed all entries from a hash table. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>table</parametername>
</parameternamelist>
<parameterdescription>
<para>the hash table to remove all entries from. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-hash.c" line="418" column="1" bodyfile="dbus/dbus-hash.c" bodystart="418" bodyend="426"/>
        <references refid="group__DBusHashTable_1ga7572541c8385e86824db78459621bbc7" compoundref="dbus-hash_8c" startline="517" endline="532">_dbus_hash_iter_init</references>
        <references refid="group__DBusHashTable_1ga64bdce3eb1c543dfb162faada65f4b78" compoundref="dbus-hash_8c" startline="543" endline="581">_dbus_hash_iter_next</references>
        <references refid="group__DBusHashTable_1gaf189e7e9933cb0326b7e2c7b9a3a03b5" compoundref="dbus-hash_8c" startline="592" endline="605">_dbus_hash_iter_remove_entry</references>
        <referencedby refid="group__DBusInternalsUtils_1gab553751e96f8506d10349fb5fb1eaa82" compoundref="dbus-userdb_8c" startline="593" endline="599">_dbus_user_database_flush</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusHashTable_1ga7572541c8385e86824db78459621bbc7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>DBUS_PRIVATE_EXPORT void _dbus_hash_iter_init</definition>
        <argsstring>(DBusHashTable *table, DBusHashIter *iter)</argsstring>
        <name>_dbus_hash_iter_init</name>
        <param>
          <type><ref refid="structDBusHashTable" kindref="compound">DBusHashTable</ref> *</type>
          <declname>table</declname>
        </param>
        <param>
          <type><ref refid="structDBusHashIter" kindref="compound">DBusHashIter</ref> *</type>
          <declname>iter</declname>
        </param>
        <briefdescription>
<para>Initializes a hash table iterator. </para>        </briefdescription>
        <detaileddescription>
<para>To iterate over all entries in a hash table, use the following code (the printf assumes a hash from strings to strings obviously):</para><para><programlisting><codeline><highlight class="normal">DBusHashIter<sp/>iter;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">_dbus_hash_iter_init<sp/>(table,<sp/>&amp;iter);</highlight></codeline>
<codeline><highlight class="normal">while<sp/>(_dbus_hash_iter_next<sp/>(&amp;iter))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>printf<sp/>(&quot;The<sp/>first<sp/>key<sp/>is<sp/>%s<sp/>and<sp/>value<sp/>is<sp/>%s\n&quot;,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_hash_iter_get_string_key<sp/>(&amp;iter),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_hash_iter_get_value<sp/>(&amp;iter));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
</programlisting></para><para>The iterator is initialized pointing &quot;one before&quot; the first hash entry. The first call to <ref refid="group__DBusHashTable_1ga64bdce3eb1c543dfb162faada65f4b78" kindref="member">_dbus_hash_iter_next()</ref> moves it onto the first valid entry or returns <ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> if the hash table is empty. Subsequent calls move to the next valid entry or return <ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> if there are no more entries.</para><para>Note that it is guaranteed to be safe to remove a hash entry during iteration, but it is not safe to add a hash entry.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>table</parametername>
</parameternamelist>
<parameterdescription>
<para>the hash table to iterate over. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>iter</parametername>
</parameternamelist>
<parameterdescription>
<para>the iterator to initialize. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-hash.c" line="517" column="1" bodyfile="dbus/dbus-hash.c" bodystart="517" bodyend="532"/>
        <referencedby refid="group__DBusHashTable_1ga06555357f633c4020bbb5b78f701b39d" compoundref="dbus-hash_8c" startline="1397" endline="1400">_dbus_hash_table_get_n_entries</referencedby>
        <referencedby refid="group__DBusHashTable_1gad169f3790ca67f8a0adafcdc88ef7188" compoundref="dbus-hash_8c" startline="418" endline="426">_dbus_hash_table_remove_all</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusHashTable_1ga64bdce3eb1c543dfb162faada65f4b78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>DBUS_PRIVATE_EXPORT dbus_bool_t _dbus_hash_iter_next</definition>
        <argsstring>(DBusHashIter *iter)</argsstring>
        <name>_dbus_hash_iter_next</name>
        <param>
          <type><ref refid="structDBusHashIter" kindref="compound">DBusHashIter</ref> *</type>
          <declname>iter</declname>
        </param>
        <briefdescription>
<para>Move the hash iterator forward one step, to the next hash entry. </para>        </briefdescription>
        <detaileddescription>
<para>The documentation for <ref refid="group__DBusHashTable_1ga7572541c8385e86824db78459621bbc7" kindref="member">_dbus_hash_iter_init()</ref> explains in more detail.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iter</parametername>
</parameternamelist>
<parameterdescription>
<para>the iterator to move forward. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> if there are no more entries to move to. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-hash.c" line="543" column="1" bodyfile="dbus/dbus-hash.c" bodystart="543" bodyend="581"/>
        <referencedby refid="group__DBusHashTable_1ga06555357f633c4020bbb5b78f701b39d" compoundref="dbus-hash_8c" startline="1397" endline="1400">_dbus_hash_table_get_n_entries</referencedby>
        <referencedby refid="group__DBusHashTable_1gad169f3790ca67f8a0adafcdc88ef7188" compoundref="dbus-hash_8c" startline="418" endline="426">_dbus_hash_table_remove_all</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusHashTable_1gaf189e7e9933cb0326b7e2c7b9a3a03b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>DBUS_PRIVATE_EXPORT void _dbus_hash_iter_remove_entry</definition>
        <argsstring>(DBusHashIter *iter)</argsstring>
        <name>_dbus_hash_iter_remove_entry</name>
        <param>
          <type><ref refid="structDBusHashIter" kindref="compound">DBusHashIter</ref> *</type>
          <declname>iter</declname>
        </param>
        <briefdescription>
<para>Removes the current entry from the hash table. </para>        </briefdescription>
        <detaileddescription>
<para>If a key_free_function or value_free_function was provided to <ref refid="group__DBusHashTable_1ga7aa7b6054c5fbf8852bad79d372580dd" kindref="member">_dbus_hash_table_new()</ref>, frees the key and/or value for this entry.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iter</parametername>
</parameternamelist>
<parameterdescription>
<para>the hash table iterator. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-hash.c" line="592" column="1" bodyfile="dbus/dbus-hash.c" bodystart="592" bodyend="605"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="148">_dbus_assert</references>
        <references refid="structDBusRealHashIter_1ad36967dc68709d676ad591d7f75dd7fa" compoundref="dbus-hash_8c" startline="215">DBusRealHashIter::bucket</references>
        <references refid="structDBusRealHashIter_1a438db1cb3a9c6db716f8bf35fe3054c7" compoundref="dbus-hash_8c" startline="219">DBusRealHashIter::entry</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="structDBusRealHashIter_1a0307c2b8fa9384554ceb3cc965b04633" compoundref="dbus-hash_8c" startline="214">DBusRealHashIter::table</references>
        <referencedby refid="group__DBusHashTable_1ga06555357f633c4020bbb5b78f701b39d" compoundref="dbus-hash_8c" startline="1397" endline="1400">_dbus_hash_table_get_n_entries</referencedby>
        <referencedby refid="group__DBusHashTable_1gad169f3790ca67f8a0adafcdc88ef7188" compoundref="dbus-hash_8c" startline="418" endline="426">_dbus_hash_table_remove_all</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusHashTable_1ga0b774bd61c68c0e9d53ea9f187595e6b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>DBUS_PRIVATE_EXPORT void * _dbus_hash_iter_get_value</definition>
        <argsstring>(DBusHashIter *iter)</argsstring>
        <name>_dbus_hash_iter_get_value</name>
        <param>
          <type><ref refid="structDBusHashIter" kindref="compound">DBusHashIter</ref> *</type>
          <declname>iter</declname>
        </param>
        <briefdescription>
<para>Gets the value of the current entry. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iter</parametername>
</parameternamelist>
<parameterdescription>
<para>the hash table iterator. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-hash.c" line="613" column="1" bodyfile="dbus/dbus-hash.c" bodystart="613" bodyend="623"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="148">_dbus_assert</references>
        <references refid="structDBusRealHashIter_1a438db1cb3a9c6db716f8bf35fe3054c7" compoundref="dbus-hash_8c" startline="219">DBusRealHashIter::entry</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="structDBusRealHashIter_1a0307c2b8fa9384554ceb3cc965b04633" compoundref="dbus-hash_8c" startline="214">DBusRealHashIter::table</references>
        <references refid="structDBusHashEntry_1ad792e9c81cc3a23859b2c60b3b00af3e" compoundref="dbus-hash_8c" startline="150">DBusHashEntry::value</references>
        <referencedby refid="group__DBusHashTable_1ga06555357f633c4020bbb5b78f701b39d" compoundref="dbus-hash_8c" startline="1397" endline="1400">_dbus_hash_table_get_n_entries</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusHashTable_1ga24193343c0948019d4a302fc18bfd5d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _dbus_hash_iter_set_value</definition>
        <argsstring>(DBusHashIter *iter, void *value)</argsstring>
        <name>_dbus_hash_iter_set_value</name>
        <param>
          <type><ref refid="structDBusHashIter" kindref="compound">DBusHashIter</ref> *</type>
          <declname>iter</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets the value of the current entry. </para>        </briefdescription>
        <detaileddescription>
<para>If the hash table has a value_free_function it will be used to free the previous value. The hash table will own the passed-in value (it will not be copied).</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iter</parametername>
</parameternamelist>
<parameterdescription>
<para>the hash table iterator. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>the new value. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-hash.c" line="636" column="1" bodyfile="dbus/dbus-hash.c" bodystart="636" bodyend="650"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="148">_dbus_assert</references>
        <references refid="structDBusRealHashIter_1a438db1cb3a9c6db716f8bf35fe3054c7" compoundref="dbus-hash_8c" startline="219">DBusRealHashIter::entry</references>
        <references refid="structDBusHashTable_1afbb42b5326b9c79352b168eace1687ca" compoundref="dbus-hash_8c" startline="204">DBusHashTable::free_value_function</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="structDBusRealHashIter_1a0307c2b8fa9384554ceb3cc965b04633" compoundref="dbus-hash_8c" startline="214">DBusRealHashIter::table</references>
        <references refid="structDBusHashEntry_1ad792e9c81cc3a23859b2c60b3b00af3e" compoundref="dbus-hash_8c" startline="150">DBusHashEntry::value</references>
        <referencedby refid="group__DBusHashTable_1ga06555357f633c4020bbb5b78f701b39d" compoundref="dbus-hash_8c" startline="1397" endline="1400">_dbus_hash_table_get_n_entries</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusHashTable_1ga747442b12362dab8efab975f6c595266" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>DBUS_PRIVATE_EXPORT int _dbus_hash_iter_get_int_key</definition>
        <argsstring>(DBusHashIter *iter)</argsstring>
        <name>_dbus_hash_iter_get_int_key</name>
        <param>
          <type><ref refid="structDBusHashIter" kindref="compound">DBusHashIter</ref> *</type>
          <declname>iter</declname>
        </param>
        <briefdescription>
<para>Gets the key for the current entry. </para>        </briefdescription>
        <detaileddescription>
<para>Only works for hash tables of type <ref refid="group__DBusHashTable_1ggab0ab9767ffa5b6720a13b3d741630852a26446bd9fbb15c6c381b35a810207141" kindref="member">DBUS_HASH_INT</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iter</parametername>
</parameternamelist>
<parameterdescription>
<para>the hash table iterator. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-hash.c" line="659" column="1" bodyfile="dbus/dbus-hash.c" bodystart="659" bodyend="669"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="148">_dbus_assert</references>
        <references refid="group__DBusInternalsUtils_1gabbd3526a2ecd65da80b9f74ac286273d" compoundref="dbus-internals_8h" startline="191">_DBUS_POINTER_TO_INT</references>
        <references refid="structDBusRealHashIter_1a438db1cb3a9c6db716f8bf35fe3054c7" compoundref="dbus-hash_8c" startline="219">DBusRealHashIter::entry</references>
        <references refid="structDBusHashEntry_1aefd9bbdcbc7d15c906e2c289c8d2e894" compoundref="dbus-hash_8c" startline="149">DBusHashEntry::key</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="structDBusRealHashIter_1a0307c2b8fa9384554ceb3cc965b04633" compoundref="dbus-hash_8c" startline="214">DBusRealHashIter::table</references>
        <referencedby refid="group__DBusHashTable_1ga06555357f633c4020bbb5b78f701b39d" compoundref="dbus-hash_8c" startline="1397" endline="1400">_dbus_hash_table_get_n_entries</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusHashTable_1gadc314f126076580dae3bd4f7f83824ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>DBUS_PRIVATE_EXPORT const char * _dbus_hash_iter_get_string_key</definition>
        <argsstring>(DBusHashIter *iter)</argsstring>
        <name>_dbus_hash_iter_get_string_key</name>
        <param>
          <type><ref refid="structDBusHashIter" kindref="compound">DBusHashIter</ref> *</type>
          <declname>iter</declname>
        </param>
        <briefdescription>
<para>Gets the key for the current entry. </para>        </briefdescription>
        <detaileddescription>
<para>Only works for hash tables of type <ref refid="group__DBusHashTable_1ggab0ab9767ffa5b6720a13b3d741630852a481fd0166d28da725b3e97f15192434e" kindref="member">DBUS_HASH_STRING</ref> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iter</parametername>
</parameternamelist>
<parameterdescription>
<para>the hash table iterator. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-hash.c" line="696" column="1" bodyfile="dbus/dbus-hash.c" bodystart="696" bodyend="706"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="148">_dbus_assert</references>
        <references refid="structDBusRealHashIter_1a438db1cb3a9c6db716f8bf35fe3054c7" compoundref="dbus-hash_8c" startline="219">DBusRealHashIter::entry</references>
        <references refid="structDBusHashEntry_1aefd9bbdcbc7d15c906e2c289c8d2e894" compoundref="dbus-hash_8c" startline="149">DBusHashEntry::key</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="structDBusRealHashIter_1a0307c2b8fa9384554ceb3cc965b04633" compoundref="dbus-hash_8c" startline="214">DBusRealHashIter::table</references>
        <referencedby refid="group__DBusHashTable_1ga06555357f633c4020bbb5b78f701b39d" compoundref="dbus-hash_8c" startline="1397" endline="1400">_dbus_hash_table_get_n_entries</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusHashTable_1ga4df55654e028b405994d2e4d64107a27" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uintptr_t</type>
        <definition>DBUS_PRIVATE_EXPORT uintptr_t _dbus_hash_iter_get_uintptr_key</definition>
        <argsstring>(DBusHashIter *iter)</argsstring>
        <name>_dbus_hash_iter_get_uintptr_key</name>
        <param>
          <type><ref refid="structDBusHashIter" kindref="compound">DBusHashIter</ref> *</type>
          <declname>iter</declname>
        </param>
        <briefdescription>
<para>Gets the key for the current entry. </para>        </briefdescription>
        <detaileddescription>
<para>Only works for hash tables of type <ref refid="group__DBusHashTable_1ggab0ab9767ffa5b6720a13b3d741630852a477caf35cc3676d6412c9b57f1d0f6c7" kindref="member">DBUS_HASH_UINTPTR</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iter</parametername>
</parameternamelist>
<parameterdescription>
<para>the hash table iterator. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-hash.c" line="678" column="1" bodyfile="dbus/dbus-hash.c" bodystart="678" bodyend="688"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="148">_dbus_assert</references>
        <references refid="structDBusRealHashIter_1a438db1cb3a9c6db716f8bf35fe3054c7" compoundref="dbus-hash_8c" startline="219">DBusRealHashIter::entry</references>
        <references refid="structDBusHashEntry_1aefd9bbdcbc7d15c906e2c289c8d2e894" compoundref="dbus-hash_8c" startline="149">DBusHashEntry::key</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="structDBusRealHashIter_1a0307c2b8fa9384554ceb3cc965b04633" compoundref="dbus-hash_8c" startline="214">DBusRealHashIter::table</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusHashTable_1gab156c35d6dd9ff6e408a835db28323fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_hash_iter_lookup</definition>
        <argsstring>(DBusHashTable *table, void *key, dbus_bool_t create_if_not_found, DBusHashIter *iter)</argsstring>
        <name>_dbus_hash_iter_lookup</name>
        <param>
          <type><ref refid="structDBusHashTable" kindref="compound">DBusHashTable</ref> *</type>
          <declname>table</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>key</declname>
        </param>
        <param>
          <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
          <declname>create_if_not_found</declname>
        </param>
        <param>
          <type><ref refid="structDBusHashIter" kindref="compound">DBusHashIter</ref> *</type>
          <declname>iter</declname>
        </param>
        <briefdescription>
<para>A low-level but efficient interface for manipulating the hash table. </para>        </briefdescription>
        <detaileddescription>
<para>It&apos;s efficient because you can get, set, and optionally create the hash entry while only running the hash function one time.</para><para>Note that while calling <ref refid="group__DBusHashTable_1ga64bdce3eb1c543dfb162faada65f4b78" kindref="member">_dbus_hash_iter_next()</ref> on the iterator filled in by this function may work, it&apos;s completely undefined which entries are after this iter and which are before it. So it would be silly to iterate using this iterator.</para><para>If the hash entry is created, its value will be initialized to all bits zero.</para><para><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> may be returned due to memory allocation failure, or because create_if_not_found was <ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> and the entry did not exist.</para><para>If create_if_not_found is <ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref> and the entry is created, the hash table takes ownership of the key that&apos;s passed in.</para><para>For a hash table of type <ref refid="group__DBusHashTable_1ggab0ab9767ffa5b6720a13b3d741630852a26446bd9fbb15c6c381b35a810207141" kindref="member">DBUS_HASH_INT</ref>, cast the int key to the key parameter using <ref refid="group__DBusInternalsUtils_1ga05e902d8504a8a0e0b183fd2e20e329f" kindref="member">_DBUS_INT_TO_POINTER()</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>table</parametername>
</parameternamelist>
<parameterdescription>
<para>the hash table. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>the hash key. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>create_if_not_found</parametername>
</parameternamelist>
<parameterdescription>
<para>if <ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>, create the entry if it didn&apos;t exist. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>iter</parametername>
</parameternamelist>
<parameterdescription>
<para>the iterator to initialize. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref> if the hash entry now exists (and the iterator is thus valid). </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-hash.c" line="740" column="1" bodyfile="dbus/dbus-hash.c" bodystart="740" bodyend="768"/>
        <referencedby refid="group__DBusHashTable_1ga06555357f633c4020bbb5b78f701b39d" compoundref="dbus-hash_8c" startline="1397" endline="1400">_dbus_hash_table_get_n_entries</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusHashTable_1gacfadc6796f8652a5b66333800b019d30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>DBUS_PRIVATE_EXPORT void * _dbus_hash_table_lookup_string</definition>
        <argsstring>(DBusHashTable *table, const char *key)</argsstring>
        <name>_dbus_hash_table_lookup_string</name>
        <param>
          <type><ref refid="structDBusHashTable" kindref="compound">DBusHashTable</ref> *</type>
          <declname>table</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Looks up the value for a given string in a hash table of type <ref refid="group__DBusHashTable_1ggab0ab9767ffa5b6720a13b3d741630852a481fd0166d28da725b3e97f15192434e" kindref="member">DBUS_HASH_STRING</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>Returns NULL if the value is not present. (A not-present entry is indistinguishable from an entry with a value of NULL.) <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>table</parametername>
</parameternamelist>
<parameterdescription>
<para>the hash table. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>the string to look up. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the value of the hash entry. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-hash.c" line="1049" column="1" bodyfile="dbus/dbus-hash.c" bodystart="1049" bodyend="1062"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="148">_dbus_assert</references>
        <references refid="group__DBusHashTable_1ggab0ab9767ffa5b6720a13b3d741630852a481fd0166d28da725b3e97f15192434e" compoundref="dbus-hash_8h" startline="69">DBUS_HASH_STRING</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="structDBusHashTable_1ab98bafddf1b1ce1dad01c5595e278e35" compoundref="dbus-hash_8c" startline="201">DBusHashTable::find_function</references>
        <references refid="structDBusHashEntry_1aefd9bbdcbc7d15c906e2c289c8d2e894" compoundref="dbus-hash_8c" startline="149">DBusHashEntry::key</references>
        <references refid="structDBusHashTable_1a28f326a2947b6be0b0b852db376a1092" compoundref="dbus-hash_8c" startline="198">DBusHashTable::key_type</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="structDBusHashEntry_1ad792e9c81cc3a23859b2c60b3b00af3e" compoundref="dbus-hash_8c" startline="150">DBusHashEntry::value</references>
        <referencedby refid="group__DBusHashTable_1ga06555357f633c4020bbb5b78f701b39d" compoundref="dbus-hash_8c" startline="1397" endline="1400">_dbus_hash_table_get_n_entries</referencedby>
        <referencedby refid="group__DBusInternalsUtils_1ga959372f7d7cdea35ffbac3b78e29a1b0" compoundref="dbus-userdb_8c" startline="128" endline="216">_dbus_user_database_lookup</referencedby>
        <referencedby refid="group__DBusInternalsUtils_1gaf6b7452691c0c7d11fec4b9214137052" compoundref="dbus-userdb-util_8c" startline="246" endline="333">_dbus_user_database_lookup_group</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusHashTable_1gafdd731ccadca43757061f9486ca8c216" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>DBUS_PRIVATE_EXPORT void * _dbus_hash_table_lookup_int</definition>
        <argsstring>(DBusHashTable *table, int key)</argsstring>
        <name>_dbus_hash_table_lookup_int</name>
        <param>
          <type><ref refid="structDBusHashTable" kindref="compound">DBusHashTable</ref> *</type>
          <declname>table</declname>
        </param>
        <param>
          <type>int</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Looks up the value for a given integer in a hash table of type <ref refid="group__DBusHashTable_1ggab0ab9767ffa5b6720a13b3d741630852a26446bd9fbb15c6c381b35a810207141" kindref="member">DBUS_HASH_INT</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>Returns NULL if the value is not present. (A not-present entry is indistinguishable from an entry with a value of NULL.) <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>table</parametername>
</parameternamelist>
<parameterdescription>
<para>the hash table. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>the integer to look up. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the value of the hash entry. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-hash.c" line="1074" column="1" bodyfile="dbus/dbus-hash.c" bodystart="1074" bodyend="1087"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="148">_dbus_assert</references>
        <references refid="group__DBusInternalsUtils_1ga05e902d8504a8a0e0b183fd2e20e329f" compoundref="dbus-internals_8h" startline="192">_DBUS_INT_TO_POINTER</references>
        <references refid="group__DBusHashTable_1ggab0ab9767ffa5b6720a13b3d741630852a26446bd9fbb15c6c381b35a810207141" compoundref="dbus-hash_8h" startline="70">DBUS_HASH_INT</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="structDBusHashTable_1ab98bafddf1b1ce1dad01c5595e278e35" compoundref="dbus-hash_8c" startline="201">DBusHashTable::find_function</references>
        <references refid="structDBusHashTable_1a28f326a2947b6be0b0b852db376a1092" compoundref="dbus-hash_8c" startline="198">DBusHashTable::key_type</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="structDBusHashEntry_1ad792e9c81cc3a23859b2c60b3b00af3e" compoundref="dbus-hash_8c" startline="150">DBusHashEntry::value</references>
        <referencedby refid="group__DBusConnectionInternals_1gac1b92eba0aeee294dc28fcc260c9b749" compoundref="dbus-connection_8c" startline="480" endline="534">_dbus_connection_queue_received_message_link</referencedby>
        <referencedby refid="group__DBusHashTable_1ga06555357f633c4020bbb5b78f701b39d" compoundref="dbus-hash_8c" startline="1397" endline="1400">_dbus_hash_table_get_n_entries</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusHashTable_1ga5ad1c4ccc1405b449d22b69d70b67860" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>DBUS_PRIVATE_EXPORT void * _dbus_hash_table_lookup_uintptr</definition>
        <argsstring>(DBusHashTable *table, uintptr_t key)</argsstring>
        <name>_dbus_hash_table_lookup_uintptr</name>
        <param>
          <type><ref refid="structDBusHashTable" kindref="compound">DBusHashTable</ref> *</type>
          <declname>table</declname>
        </param>
        <param>
          <type>uintptr_t</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Looks up the value for a given integer in a hash table of type <ref refid="group__DBusHashTable_1ggab0ab9767ffa5b6720a13b3d741630852a477caf35cc3676d6412c9b57f1d0f6c7" kindref="member">DBUS_HASH_UINTPTR</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>Returns NULL if the value is not present. (A not-present entry is indistinguishable from an entry with a value of NULL.) <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>table</parametername>
</parameternamelist>
<parameterdescription>
<para>the hash table. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>the integer to look up. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the value of the hash entry. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-hash.c" line="1099" column="1" bodyfile="dbus/dbus-hash.c" bodystart="1099" bodyend="1112"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="148">_dbus_assert</references>
        <references refid="group__DBusHashTable_1ggab0ab9767ffa5b6720a13b3d741630852a477caf35cc3676d6412c9b57f1d0f6c7" compoundref="dbus-hash_8h" startline="71">DBUS_HASH_UINTPTR</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="structDBusHashTable_1ab98bafddf1b1ce1dad01c5595e278e35" compoundref="dbus-hash_8c" startline="201">DBusHashTable::find_function</references>
        <references refid="structDBusHashEntry_1aefd9bbdcbc7d15c906e2c289c8d2e894" compoundref="dbus-hash_8c" startline="149">DBusHashEntry::key</references>
        <references refid="structDBusHashTable_1a28f326a2947b6be0b0b852db376a1092" compoundref="dbus-hash_8c" startline="198">DBusHashTable::key_type</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="structDBusHashEntry_1ad792e9c81cc3a23859b2c60b3b00af3e" compoundref="dbus-hash_8c" startline="150">DBusHashEntry::value</references>
        <referencedby refid="group__DBusHashTable_1ga06555357f633c4020bbb5b78f701b39d" compoundref="dbus-hash_8c" startline="1397" endline="1400">_dbus_hash_table_get_n_entries</referencedby>
        <referencedby refid="group__DBusInternalsUtils_1ga959372f7d7cdea35ffbac3b78e29a1b0" compoundref="dbus-userdb_8c" startline="128" endline="216">_dbus_user_database_lookup</referencedby>
        <referencedby refid="group__DBusInternalsUtils_1gaf6b7452691c0c7d11fec4b9214137052" compoundref="dbus-userdb-util_8c" startline="246" endline="333">_dbus_user_database_lookup_group</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusHashTable_1ga96ef91a7d982e77ef17a42be6acc177b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>DBUS_PRIVATE_EXPORT dbus_bool_t _dbus_hash_table_remove_string</definition>
        <argsstring>(DBusHashTable *table, const char *key)</argsstring>
        <name>_dbus_hash_table_remove_string</name>
        <param>
          <type><ref refid="structDBusHashTable" kindref="compound">DBusHashTable</ref> *</type>
          <declname>table</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Removes the hash entry for the given key. </para>        </briefdescription>
        <detaileddescription>
<para>If no hash entry for the key exists, does nothing.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>table</parametername>
</parameternamelist>
<parameterdescription>
<para>the hash table. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>the hash key. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref> if the entry existed </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-hash.c" line="1123" column="1" bodyfile="dbus/dbus-hash.c" bodystart="1123" bodyend="1140"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="148">_dbus_assert</references>
        <references refid="group__DBusHashTable_1ggab0ab9767ffa5b6720a13b3d741630852a481fd0166d28da725b3e97f15192434e" compoundref="dbus-hash_8h" startline="69">DBUS_HASH_STRING</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="structDBusHashTable_1ab98bafddf1b1ce1dad01c5595e278e35" compoundref="dbus-hash_8c" startline="201">DBusHashTable::find_function</references>
        <references refid="structDBusHashEntry_1aefd9bbdcbc7d15c906e2c289c8d2e894" compoundref="dbus-hash_8c" startline="149">DBusHashEntry::key</references>
        <references refid="structDBusHashTable_1a28f326a2947b6be0b0b852db376a1092" compoundref="dbus-hash_8c" startline="198">DBusHashTable::key_type</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <referencedby refid="group__DBusHashTable_1ga06555357f633c4020bbb5b78f701b39d" compoundref="dbus-hash_8c" startline="1397" endline="1400">_dbus_hash_table_get_n_entries</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusHashTable_1ga8b9306c318909ec6a36459b9de6a77cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>DBUS_PRIVATE_EXPORT dbus_bool_t _dbus_hash_table_remove_int</definition>
        <argsstring>(DBusHashTable *table, int key)</argsstring>
        <name>_dbus_hash_table_remove_int</name>
        <param>
          <type><ref refid="structDBusHashTable" kindref="compound">DBusHashTable</ref> *</type>
          <declname>table</declname>
        </param>
        <param>
          <type>int</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Removes the hash entry for the given key. </para>        </briefdescription>
        <detaileddescription>
<para>If no hash entry for the key exists, does nothing.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>table</parametername>
</parameternamelist>
<parameterdescription>
<para>the hash table. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>the hash key. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref> if the entry existed </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-hash.c" line="1151" column="1" bodyfile="dbus/dbus-hash.c" bodystart="1151" bodyend="1168"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="148">_dbus_assert</references>
        <references refid="group__DBusInternalsUtils_1ga05e902d8504a8a0e0b183fd2e20e329f" compoundref="dbus-internals_8h" startline="192">_DBUS_INT_TO_POINTER</references>
        <references refid="group__DBusHashTable_1ggab0ab9767ffa5b6720a13b3d741630852a26446bd9fbb15c6c381b35a810207141" compoundref="dbus-hash_8h" startline="70">DBUS_HASH_INT</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="structDBusHashTable_1ab98bafddf1b1ce1dad01c5595e278e35" compoundref="dbus-hash_8c" startline="201">DBusHashTable::find_function</references>
        <references refid="structDBusHashTable_1a28f326a2947b6be0b0b852db376a1092" compoundref="dbus-hash_8c" startline="198">DBusHashTable::key_type</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <referencedby refid="group__DBusHashTable_1ga06555357f633c4020bbb5b78f701b39d" compoundref="dbus-hash_8c" startline="1397" endline="1400">_dbus_hash_table_get_n_entries</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusHashTable_1ga0854d0a66204f075f5a1a9f7dbca799a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>DBUS_PRIVATE_EXPORT dbus_bool_t _dbus_hash_table_remove_uintptr</definition>
        <argsstring>(DBusHashTable *table, uintptr_t key)</argsstring>
        <name>_dbus_hash_table_remove_uintptr</name>
        <param>
          <type><ref refid="structDBusHashTable" kindref="compound">DBusHashTable</ref> *</type>
          <declname>table</declname>
        </param>
        <param>
          <type>uintptr_t</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Removes the hash entry for the given key. </para>        </briefdescription>
        <detaileddescription>
<para>If no hash entry for the key exists, does nothing.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>table</parametername>
</parameternamelist>
<parameterdescription>
<para>the hash table. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>the hash key. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref> if the entry existed </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-hash.c" line="1179" column="1" bodyfile="dbus/dbus-hash.c" bodystart="1179" bodyend="1196"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="148">_dbus_assert</references>
        <references refid="group__DBusHashTable_1ggab0ab9767ffa5b6720a13b3d741630852a477caf35cc3676d6412c9b57f1d0f6c7" compoundref="dbus-hash_8h" startline="71">DBUS_HASH_UINTPTR</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="structDBusHashTable_1ab98bafddf1b1ce1dad01c5595e278e35" compoundref="dbus-hash_8c" startline="201">DBusHashTable::find_function</references>
        <references refid="structDBusHashEntry_1aefd9bbdcbc7d15c906e2c289c8d2e894" compoundref="dbus-hash_8c" startline="149">DBusHashEntry::key</references>
        <references refid="structDBusHashTable_1a28f326a2947b6be0b0b852db376a1092" compoundref="dbus-hash_8c" startline="198">DBusHashTable::key_type</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <referencedby refid="group__DBusHashTable_1ga06555357f633c4020bbb5b78f701b39d" compoundref="dbus-hash_8c" startline="1397" endline="1400">_dbus_hash_table_get_n_entries</referencedby>
        <referencedby refid="group__DBusInternalsUtils_1ga959372f7d7cdea35ffbac3b78e29a1b0" compoundref="dbus-userdb_8c" startline="128" endline="216">_dbus_user_database_lookup</referencedby>
        <referencedby refid="group__DBusInternalsUtils_1gaf6b7452691c0c7d11fec4b9214137052" compoundref="dbus-userdb-util_8c" startline="246" endline="333">_dbus_user_database_lookup_group</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusHashTable_1ga2b38eb4cc88efa57435a66f70331b0b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>DBUS_PRIVATE_EXPORT dbus_bool_t _dbus_hash_table_insert_string</definition>
        <argsstring>(DBusHashTable *table, char *key, void *value)</argsstring>
        <name>_dbus_hash_table_insert_string</name>
        <param>
          <type><ref refid="structDBusHashTable" kindref="compound">DBusHashTable</ref> *</type>
          <declname>table</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Creates a hash entry with the given key and value. </para>        </briefdescription>
        <detaileddescription>
<para>The key and value are not copied; they are stored in the hash table by reference. If an entry with the given key already exists, the previous key and value are overwritten (and freed if the hash table has a key_free_function and/or value_free_function).</para><para>Returns <ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> if memory for the new hash entry can&apos;t be allocated.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>table</parametername>
</parameternamelist>
<parameterdescription>
<para>the hash table. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>the hash entry key. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>the hash entry value. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-hash.c" line="1214" column="1" bodyfile="dbus/dbus-hash.c" bodystart="1214" bodyend="1230"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="148">_dbus_assert</references>
        <references refid="group__DBusHashTable_1gaf1cba5e6765de02d2ee29acae72b985b" compoundref="dbus-hash_8c" startline="1366" endline="1388">_dbus_hash_table_insert_string_preallocated</references>
        <references refid="group__DBusHashTable_1ga8bc6ac0897eff9ef72b7616a89a79b49" compoundref="dbus-hash_8c" startline="1322" endline="1329">_dbus_hash_table_preallocate_entry</references>
        <references refid="group__DBusHashTable_1ggab0ab9767ffa5b6720a13b3d741630852a481fd0166d28da725b3e97f15192434e" compoundref="dbus-hash_8h" startline="69">DBUS_HASH_STRING</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="structDBusHashTable_1a28f326a2947b6be0b0b852db376a1092" compoundref="dbus-hash_8c" startline="198">DBusHashTable::key_type</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <referencedby refid="group__DBusHashTable_1ga06555357f633c4020bbb5b78f701b39d" compoundref="dbus-hash_8c" startline="1397" endline="1400">_dbus_hash_table_get_n_entries</referencedby>
        <referencedby refid="group__DBusInternalsUtils_1ga959372f7d7cdea35ffbac3b78e29a1b0" compoundref="dbus-userdb_8c" startline="128" endline="216">_dbus_user_database_lookup</referencedby>
        <referencedby refid="group__DBusInternalsUtils_1gaf6b7452691c0c7d11fec4b9214137052" compoundref="dbus-userdb-util_8c" startline="246" endline="333">_dbus_user_database_lookup_group</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusHashTable_1ga2065297d8e8e3590d2235acf7f00a6d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>DBUS_PRIVATE_EXPORT dbus_bool_t _dbus_hash_table_insert_int</definition>
        <argsstring>(DBusHashTable *table, int key, void *value)</argsstring>
        <name>_dbus_hash_table_insert_int</name>
        <param>
          <type><ref refid="structDBusHashTable" kindref="compound">DBusHashTable</ref> *</type>
          <declname>table</declname>
        </param>
        <param>
          <type>int</type>
          <declname>key</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Creates a hash entry with the given key and value. </para>        </briefdescription>
        <detaileddescription>
<para>The key and value are not copied; they are stored in the hash table by reference. If an entry with the given key already exists, the previous key and value are overwritten (and freed if the hash table has a key_free_function and/or value_free_function).</para><para>Returns <ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> if memory for the new hash entry can&apos;t be allocated.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>table</parametername>
</parameternamelist>
<parameterdescription>
<para>the hash table. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>the hash entry key. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>the hash entry value. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-hash.c" line="1248" column="1" bodyfile="dbus/dbus-hash.c" bodystart="1248" bodyend="1271"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="148">_dbus_assert</references>
        <references refid="group__DBusInternalsUtils_1ga05e902d8504a8a0e0b183fd2e20e329f" compoundref="dbus-internals_8h" startline="192">_DBUS_INT_TO_POINTER</references>
        <references refid="group__DBusHashTable_1ggab0ab9767ffa5b6720a13b3d741630852a26446bd9fbb15c6c381b35a810207141" compoundref="dbus-hash_8h" startline="70">DBUS_HASH_INT</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="structDBusHashTable_1ab98bafddf1b1ce1dad01c5595e278e35" compoundref="dbus-hash_8c" startline="201">DBusHashTable::find_function</references>
        <references refid="structDBusHashTable_1a5f6541574ea8e6bedd80773dce8e52a6" compoundref="dbus-hash_8c" startline="203">DBusHashTable::free_key_function</references>
        <references refid="structDBusHashTable_1afbb42b5326b9c79352b168eace1687ca" compoundref="dbus-hash_8c" startline="204">DBusHashTable::free_value_function</references>
        <references refid="structDBusHashEntry_1aefd9bbdcbc7d15c906e2c289c8d2e894" compoundref="dbus-hash_8c" startline="149">DBusHashEntry::key</references>
        <references refid="structDBusHashTable_1a28f326a2947b6be0b0b852db376a1092" compoundref="dbus-hash_8c" startline="198">DBusHashTable::key_type</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="structDBusHashEntry_1ad792e9c81cc3a23859b2c60b3b00af3e" compoundref="dbus-hash_8c" startline="150">DBusHashEntry::value</references>
        <referencedby refid="group__DBusHashTable_1ga06555357f633c4020bbb5b78f701b39d" compoundref="dbus-hash_8c" startline="1397" endline="1400">_dbus_hash_table_get_n_entries</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusHashTable_1gaed7365623dcb72434f890feed28e9e42" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>DBUS_PRIVATE_EXPORT dbus_bool_t _dbus_hash_table_insert_uintptr</definition>
        <argsstring>(DBusHashTable *table, uintptr_t key, void *value)</argsstring>
        <name>_dbus_hash_table_insert_uintptr</name>
        <param>
          <type><ref refid="structDBusHashTable" kindref="compound">DBusHashTable</ref> *</type>
          <declname>table</declname>
        </param>
        <param>
          <type>uintptr_t</type>
          <declname>key</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Creates a hash entry with the given key and value. </para>        </briefdescription>
        <detaileddescription>
<para>The key and value are not copied; they are stored in the hash table by reference. If an entry with the given key already exists, the previous key and value are overwritten (and freed if the hash table has a key_free_function and/or value_free_function).</para><para>Returns <ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> if memory for the new hash entry can&apos;t be allocated.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>table</parametername>
</parameternamelist>
<parameterdescription>
<para>the hash table. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>the hash entry key. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>the hash entry value. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-hash.c" line="1289" column="1" bodyfile="dbus/dbus-hash.c" bodystart="1289" bodyend="1312"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="148">_dbus_assert</references>
        <references refid="group__DBusHashTable_1ggab0ab9767ffa5b6720a13b3d741630852a477caf35cc3676d6412c9b57f1d0f6c7" compoundref="dbus-hash_8h" startline="71">DBUS_HASH_UINTPTR</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="structDBusHashTable_1ab98bafddf1b1ce1dad01c5595e278e35" compoundref="dbus-hash_8c" startline="201">DBusHashTable::find_function</references>
        <references refid="structDBusHashTable_1a5f6541574ea8e6bedd80773dce8e52a6" compoundref="dbus-hash_8c" startline="203">DBusHashTable::free_key_function</references>
        <references refid="structDBusHashTable_1afbb42b5326b9c79352b168eace1687ca" compoundref="dbus-hash_8c" startline="204">DBusHashTable::free_value_function</references>
        <references refid="structDBusHashEntry_1aefd9bbdcbc7d15c906e2c289c8d2e894" compoundref="dbus-hash_8c" startline="149">DBusHashEntry::key</references>
        <references refid="structDBusHashTable_1a28f326a2947b6be0b0b852db376a1092" compoundref="dbus-hash_8c" startline="198">DBusHashTable::key_type</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="structDBusHashEntry_1ad792e9c81cc3a23859b2c60b3b00af3e" compoundref="dbus-hash_8c" startline="150">DBusHashEntry::value</references>
        <referencedby refid="group__DBusHashTable_1ga06555357f633c4020bbb5b78f701b39d" compoundref="dbus-hash_8c" startline="1397" endline="1400">_dbus_hash_table_get_n_entries</referencedby>
        <referencedby refid="group__DBusInternalsUtils_1ga959372f7d7cdea35ffbac3b78e29a1b0" compoundref="dbus-userdb_8c" startline="128" endline="216">_dbus_user_database_lookup</referencedby>
        <referencedby refid="group__DBusInternalsUtils_1gaf6b7452691c0c7d11fec4b9214137052" compoundref="dbus-userdb-util_8c" startline="246" endline="333">_dbus_user_database_lookup_group</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusHashTable_1ga06555357f633c4020bbb5b78f701b39d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>DBUS_PRIVATE_EXPORT int _dbus_hash_table_get_n_entries</definition>
        <argsstring>(DBusHashTable *table)</argsstring>
        <name>_dbus_hash_table_get_n_entries</name>
        <param>
          <type><ref refid="structDBusHashTable" kindref="compound">DBusHashTable</ref> *</type>
          <declname>table</declname>
        </param>
        <briefdescription>
<para>Gets the number of hash entries in a hash table. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>table</parametername>
</parameternamelist>
<parameterdescription>
<para>the hash table. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the number of entries in the table. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-hash.c" line="1397" column="1" bodyfile="dbus/dbus-hash.c" bodystart="1397" bodyend="1400"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="148">_dbus_assert</references>
        <references refid="group__DBusInternalsUtils_1ga0c4961ec784874f1b1f3aeccea8d3da1" compoundref="dbus-internals_8h" startline="159">_dbus_assert_not_reached</references>
        <references refid="group__DBusHashTable_1ga747442b12362dab8efab975f6c595266" compoundref="dbus-hash_8c" startline="659" endline="669">_dbus_hash_iter_get_int_key</references>
        <references refid="group__DBusHashTable_1gadc314f126076580dae3bd4f7f83824ca" compoundref="dbus-hash_8c" startline="696" endline="706">_dbus_hash_iter_get_string_key</references>
        <references refid="group__DBusHashTable_1ga0b774bd61c68c0e9d53ea9f187595e6b" compoundref="dbus-hash_8c" startline="613" endline="623">_dbus_hash_iter_get_value</references>
        <references refid="group__DBusHashTable_1ga7572541c8385e86824db78459621bbc7" compoundref="dbus-hash_8c" startline="517" endline="532">_dbus_hash_iter_init</references>
        <references refid="group__DBusHashTable_1gab156c35d6dd9ff6e408a835db28323fb" compoundref="dbus-hash_8c" startline="740" endline="768">_dbus_hash_iter_lookup</references>
        <references refid="group__DBusHashTable_1ga64bdce3eb1c543dfb162faada65f4b78" compoundref="dbus-hash_8c" startline="543" endline="581">_dbus_hash_iter_next</references>
        <references refid="group__DBusHashTable_1gaf189e7e9933cb0326b7e2c7b9a3a03b5" compoundref="dbus-hash_8c" startline="592" endline="605">_dbus_hash_iter_remove_entry</references>
        <references refid="group__DBusHashTable_1ga24193343c0948019d4a302fc18bfd5d9" compoundref="dbus-hash_8c" startline="636" endline="650">_dbus_hash_iter_set_value</references>
        <references refid="group__DBusHashTable_1ga2065297d8e8e3590d2235acf7f00a6d2" compoundref="dbus-hash_8c" startline="1248" endline="1271">_dbus_hash_table_insert_int</references>
        <references refid="group__DBusHashTable_1ga2b38eb4cc88efa57435a66f70331b0b4" compoundref="dbus-hash_8c" startline="1214" endline="1230">_dbus_hash_table_insert_string</references>
        <references refid="group__DBusHashTable_1gaed7365623dcb72434f890feed28e9e42" compoundref="dbus-hash_8c" startline="1289" endline="1312">_dbus_hash_table_insert_uintptr</references>
        <references refid="group__DBusHashTable_1gafdd731ccadca43757061f9486ca8c216" compoundref="dbus-hash_8c" startline="1074" endline="1087">_dbus_hash_table_lookup_int</references>
        <references refid="group__DBusHashTable_1gacfadc6796f8652a5b66333800b019d30" compoundref="dbus-hash_8c" startline="1049" endline="1062">_dbus_hash_table_lookup_string</references>
        <references refid="group__DBusHashTable_1ga5ad1c4ccc1405b449d22b69d70b67860" compoundref="dbus-hash_8c" startline="1099" endline="1112">_dbus_hash_table_lookup_uintptr</references>
        <references refid="group__DBusHashTable_1ga7aa7b6054c5fbf8852bad79d372580dd" compoundref="dbus-hash_8c" startline="285" endline="337">_dbus_hash_table_new</references>
        <references refid="group__DBusHashTable_1ga4ad4622378885e5d911c26956e174a45" compoundref="dbus-hash_8c" startline="347" endline="352">_dbus_hash_table_ref</references>
        <references refid="group__DBusHashTable_1ga8b9306c318909ec6a36459b9de6a77cb" compoundref="dbus-hash_8c" startline="1151" endline="1168">_dbus_hash_table_remove_int</references>
        <references refid="group__DBusHashTable_1ga96ef91a7d982e77ef17a42be6acc177b" compoundref="dbus-hash_8c" startline="1123" endline="1140">_dbus_hash_table_remove_string</references>
        <references refid="group__DBusHashTable_1ga0854d0a66204f075f5a1a9f7dbca799a" compoundref="dbus-hash_8c" startline="1179" endline="1196">_dbus_hash_table_remove_uintptr</references>
        <references refid="group__DBusHashTable_1ga5ba600e4a4ea0dac1ab3f2bbf9e1665e" compoundref="dbus-hash_8c" startline="361" endline="410">_dbus_hash_table_unref</references>
        <references refid="group__DBusInternalsUtils_1ga05e902d8504a8a0e0b183fd2e20e329f" compoundref="dbus-internals_8h" startline="192">_DBUS_INT_TO_POINTER</references>
        <references refid="group__DBusInternalsUtils_1ga9d00d77f6595b9d7ac1baf59d44bf58c" compoundref="dbus-internals_8c" startline="537" endline="554">_dbus_strdup</references>
        <references refid="group__DBusMemory_1ga34e666b19b015035a9a31e53da84b39a" compoundref="dbus-memory_8c" startline="701" endline="740">dbus_free</references>
        <references refid="group__DBusHashTable_1ggab0ab9767ffa5b6720a13b3d741630852a26446bd9fbb15c6c381b35a810207141" compoundref="dbus-hash_8h" startline="70">DBUS_HASH_INT</references>
        <references refid="group__DBusHashTable_1ggab0ab9767ffa5b6720a13b3d741630852a481fd0166d28da725b3e97f15192434e" compoundref="dbus-hash_8h" startline="69">DBUS_HASH_STRING</references>
        <references refid="group__DBusHashTable_1ggab0ab9767ffa5b6720a13b3d741630852a477caf35cc3676d6412c9b57f1d0f6c7" compoundref="dbus-hash_8h" startline="71">DBUS_HASH_UINTPTR</references>
        <references refid="group__DBusMemory_1gaf6e588659067a854c3cca7ebe8ae5084" compoundref="dbus-memory_8c" startline="461" endline="516">dbus_malloc</references>
        <references refid="group__DBusMemory_1ga54ccb556e7964112a825a7f46c156ca0" compoundref="dbus-memory_8h" startline="58">dbus_new</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="structDBusHashEntry_1aefd9bbdcbc7d15c906e2c289c8d2e894" compoundref="dbus-hash_8c" startline="149">DBusHashEntry::key</references>
        <references refid="structDBusHashTable_1affbf11a9c3dd72d55b7976891f7b4650" compoundref="dbus-hash_8c" startline="182">DBusHashTable::n_entries</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="structDBusHashEntry_1ad792e9c81cc3a23859b2c60b3b00af3e" compoundref="dbus-hash_8c" startline="150">DBusHashEntry::value</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusHashTable_1ga8bc6ac0897eff9ef72b7616a89a79b49" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusHashTable_1ga175dc6ab841ed32bb6acf6e4c0df36a8" kindref="member">DBusPreallocatedHash</ref> *</type>
        <definition>DBUS_PRIVATE_EXPORT DBusPreallocatedHash * _dbus_hash_table_preallocate_entry</definition>
        <argsstring>(DBusHashTable *table)</argsstring>
        <name>_dbus_hash_table_preallocate_entry</name>
        <param>
          <type><ref refid="structDBusHashTable" kindref="compound">DBusHashTable</ref> *</type>
          <declname>table</declname>
        </param>
        <briefdescription>
<para>Preallocate an opaque data blob that allows us to insert into the hash table at a later time without allocating any memory. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>table</parametername>
</parameternamelist>
<parameterdescription>
<para>the hash table </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the preallocated data, or <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref> if no memory </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-hash.c" line="1322" column="1" bodyfile="dbus/dbus-hash.c" bodystart="1322" bodyend="1329"/>
        <referencedby refid="group__DBusHashTable_1ga2b38eb4cc88efa57435a66f70331b0b4" compoundref="dbus-hash_8c" startline="1214" endline="1230">_dbus_hash_table_insert_string</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusHashTable_1ga762aa8cbc471e727036b3ace47cf213b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>DBUS_PRIVATE_EXPORT void _dbus_hash_table_free_preallocated_entry</definition>
        <argsstring>(DBusHashTable *table, DBusPreallocatedHash *preallocated)</argsstring>
        <name>_dbus_hash_table_free_preallocated_entry</name>
        <param>
          <type><ref refid="structDBusHashTable" kindref="compound">DBusHashTable</ref> *</type>
          <declname>table</declname>
        </param>
        <param>
          <type><ref refid="group__DBusHashTable_1ga175dc6ab841ed32bb6acf6e4c0df36a8" kindref="member">DBusPreallocatedHash</ref> *</type>
          <declname>preallocated</declname>
        </param>
        <briefdescription>
<para>Frees an opaque DBusPreallocatedHash that was <emphasis>not</emphasis> used in order to insert into the hash table. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>table</parametername>
</parameternamelist>
<parameterdescription>
<para>the hash table </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>preallocated</parametername>
</parameternamelist>
<parameterdescription>
<para>the preallocated data </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-hash.c" line="1339" column="1" bodyfile="dbus/dbus-hash.c" bodystart="1339" bodyend="1350"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="148">_dbus_assert</references>
        <references refid="group__DBusMemPool_1ga4e2feaefee7384ed940059e6c7b0a9d5" compoundref="dbus-mempool_8c" startline="347" endline="406">_dbus_mem_pool_dealloc</references>
        <references refid="structDBusHashTable_1ad1224e6c3c632afb265b78f8f6e30f97" compoundref="dbus-hash_8c" startline="206">DBusHashTable::entry_pool</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusHashTable_1gaf1cba5e6765de02d2ee29acae72b985b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>DBUS_PRIVATE_EXPORT void _dbus_hash_table_insert_string_preallocated</definition>
        <argsstring>(DBusHashTable *table, DBusPreallocatedHash *preallocated, char *key, void *value)</argsstring>
        <name>_dbus_hash_table_insert_string_preallocated</name>
        <param>
          <type><ref refid="structDBusHashTable" kindref="compound">DBusHashTable</ref> *</type>
          <declname>table</declname>
        </param>
        <param>
          <type><ref refid="group__DBusHashTable_1ga175dc6ab841ed32bb6acf6e4c0df36a8" kindref="member">DBusPreallocatedHash</ref> *</type>
          <declname>preallocated</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Inserts a string-keyed entry into the hash table, using a preallocated data block from <ref refid="group__DBusHashTable_1ga8bc6ac0897eff9ef72b7616a89a79b49" kindref="member">_dbus_hash_table_preallocate_entry()</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>This function cannot fail due to lack of memory. The DBusPreallocatedHash object is consumed and should not be reused or freed. Otherwise this function works just like <ref refid="group__DBusHashTable_1ga2b38eb4cc88efa57435a66f70331b0b4" kindref="member">_dbus_hash_table_insert_string()</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>table</parametername>
</parameternamelist>
<parameterdescription>
<para>the hash table </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>preallocated</parametername>
</parameternamelist>
<parameterdescription>
<para>the preallocated data </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>the hash key </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>the value </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-hash.c" line="1366" column="1" bodyfile="dbus/dbus-hash.c" bodystart="1366" bodyend="1388"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="148">_dbus_assert</references>
        <references refid="group__DBusHashTable_1ggab0ab9767ffa5b6720a13b3d741630852a481fd0166d28da725b3e97f15192434e" compoundref="dbus-hash_8h" startline="69">DBUS_HASH_STRING</references>
        <references refid="structDBusHashTable_1ab98bafddf1b1ce1dad01c5595e278e35" compoundref="dbus-hash_8c" startline="201">DBusHashTable::find_function</references>
        <references refid="structDBusHashTable_1a5f6541574ea8e6bedd80773dce8e52a6" compoundref="dbus-hash_8c" startline="203">DBusHashTable::free_key_function</references>
        <references refid="structDBusHashTable_1afbb42b5326b9c79352b168eace1687ca" compoundref="dbus-hash_8c" startline="204">DBusHashTable::free_value_function</references>
        <references refid="structDBusHashEntry_1aefd9bbdcbc7d15c906e2c289c8d2e894" compoundref="dbus-hash_8c" startline="149">DBusHashEntry::key</references>
        <references refid="structDBusHashTable_1a28f326a2947b6be0b0b852db376a1092" compoundref="dbus-hash_8c" startline="198">DBusHashTable::key_type</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="structDBusHashEntry_1ad792e9c81cc3a23859b2c60b3b00af3e" compoundref="dbus-hash_8c" startline="150">DBusHashEntry::value</references>
        <referencedby refid="group__DBusHashTable_1ga2b38eb4cc88efa57435a66f70331b0b4" compoundref="dbus-hash_8c" startline="1214" endline="1230">_dbus_hash_table_insert_string</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusHashTable_1ga9b92949a2de4f25ab17b5d1470cd3e35" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>DBusPollable</type>
        <definition>static DBusPollable _dbus_hash_iter_get_pollable_key</definition>
        <argsstring>(DBusHashIter *iter)</argsstring>
        <name>_dbus_hash_iter_get_pollable_key</name>
        <param>
          <type><ref refid="structDBusHashIter" kindref="compound">DBusHashIter</ref> *</type>
          <declname>iter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-hash.h" line="159" column="1" bodyfile="dbus/dbus-hash.h" bodystart="159" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusHashTable_1gadc17ed590b4145553773b60629f94ea6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void *</type>
        <definition>static void* _dbus_hash_table_lookup_pollable</definition>
        <argsstring>(DBusHashTable *table, DBusPollable key)</argsstring>
        <name>_dbus_hash_table_lookup_pollable</name>
        <param>
          <type><ref refid="structDBusHashTable" kindref="compound">DBusHashTable</ref> *</type>
          <declname>table</declname>
        </param>
        <param>
          <type>DBusPollable</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-hash.h" line="172" column="1" bodyfile="dbus/dbus-hash.h" bodystart="172" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusHashTable_1gaa5fa832aaba1c460b3c7dddcd7ce3a87" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>static dbus_bool_t _dbus_hash_table_remove_pollable</definition>
        <argsstring>(DBusHashTable *table, DBusPollable key)</argsstring>
        <name>_dbus_hash_table_remove_pollable</name>
        <param>
          <type><ref refid="structDBusHashTable" kindref="compound">DBusHashTable</ref> *</type>
          <declname>table</declname>
        </param>
        <param>
          <type>DBusPollable</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-hash.h" line="183" column="1" bodyfile="dbus/dbus-hash.h" bodystart="183" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusHashTable_1ga473916ad2260559f2c30f8d5e7514bc4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>static dbus_bool_t _dbus_hash_table_insert_pollable</definition>
        <argsstring>(DBusHashTable *table, DBusPollable key, void *value)</argsstring>
        <name>_dbus_hash_table_insert_pollable</name>
        <param>
          <type><ref refid="structDBusHashTable" kindref="compound">DBusHashTable</ref> *</type>
          <declname>table</declname>
        </param>
        <param>
          <type>DBusPollable</type>
          <declname>key</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-hash.h" line="194" column="1" bodyfile="dbus/dbus-hash.h" bodystart="194" bodyend="203"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>-*-<sp/>mode:<sp/>C;<sp/>c-file-style:<sp/>&quot;gnu&quot;;<sp/>indent-tabs-mode:<sp/>nil;<sp/>-*-<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>dbus-hash.h<sp/>Generic<sp/>hash<sp/>table<sp/>utility<sp/>(internal<sp/>to<sp/>D-Bus<sp/>implementation)</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>2002<sp/><sp/>Red<sp/>Hat,<sp/>Inc.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Academic<sp/>Free<sp/>License<sp/>version<sp/>2.1</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>This<sp/>program<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>2<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>along<sp/>with<sp/>this<sp/>program;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>Foundation,<sp/>Inc.,<sp/>51<sp/>Franklin<sp/>Street,<sp/>Fifth<sp/>Floor,<sp/>Boston,<sp/>MA<sp/><sp/>02110-1301<sp/><sp/>USA</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DBUS_HASH_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DBUS_HASH_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_STDINT_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_INTTYPES_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;inttypes.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dbus/dbus-memory.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dbus/dbus-types.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dbus/dbus-sysdeps.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><ref refid="group__DBusMacros_1ga875146b01015e9ced22b25d76d549ab2" kindref="member">DBUS_BEGIN_DECLS</ref></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="structDBusHashIter" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structDBusHashIter" kindref="compound">DBusHashIter</ref></highlight></codeline>
<codeline lineno="50"><highlight class="normal">{</highlight></codeline>
<codeline lineno="51" refid="structDBusHashIter_1a4e6bbed1c783d5968eb4dd17b96873ed" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structDBusHashIter_1a4e6bbed1c783d5968eb4dd17b96873ed" kindref="member">dummy1</ref>;<sp/></highlight></codeline>
<codeline lineno="52" refid="structDBusHashIter_1ae06a55fb213d4adbc5c16de926711980" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structDBusHashIter_1ae06a55fb213d4adbc5c16de926711980" kindref="member">dummy2</ref>;<sp/></highlight></codeline>
<codeline lineno="53" refid="structDBusHashIter_1a9e9daf7426ca6180dc264133f15920a1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structDBusHashIter_1a9e9daf7426ca6180dc264133f15920a1" kindref="member">dummy3</ref>;<sp/></highlight></codeline>
<codeline lineno="54" refid="structDBusHashIter_1a8436378d32717add82277b8ffd4c18ec" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structDBusHashIter_1a8436378d32717add82277b8ffd4c18ec" kindref="member">dummy4</ref>;<sp/></highlight></codeline>
<codeline lineno="55" refid="structDBusHashIter_1a909e0b74032c3f3254a836cdd815f2c2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="structDBusHashIter_1a909e0b74032c3f3254a836cdd815f2c2" kindref="member">dummy5</ref>;<sp/></highlight></codeline>
<codeline lineno="56" refid="structDBusHashIter_1a991c36684620a38201d6989d7b02457a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="structDBusHashIter_1a991c36684620a38201d6989d7b02457a" kindref="member">dummy6</ref>;<sp/></highlight></codeline>
<codeline lineno="57"><highlight class="normal">};</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="group__DBusHashTable_1gae11437504d2f1ec62272264214968988" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structDBusHashTable" kindref="compound">DBusHashTable</ref><sp/><ref refid="structDBusHashTable" kindref="compound">DBusHashTable</ref>;</highlight></codeline>
<codeline lineno="60" refid="group__DBusHashTable_1gae8ee983d1bea5d9c49dab9714bc91a68" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structDBusHashIter" kindref="compound">DBusHashIter</ref><sp/><sp/><ref refid="structDBusHashIter" kindref="compound">DBusHashIter</ref>;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Allowing<sp/>an<sp/>arbitrary<sp/>function<sp/>as<sp/>with<sp/>GLib</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/>*<sp/>would<sp/>be<sp/>nicer<sp/>for<sp/>a<sp/>public<sp/>API,<sp/>but<sp/>for</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/>*<sp/>an<sp/>internal<sp/>API<sp/>this<sp/>saves<sp/>typing,<sp/>we<sp/>can<sp/>add</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/>*<sp/>more<sp/>whenever<sp/>we<sp/>feel<sp/>like<sp/>it.</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="group__DBusHashTable_1gab0ab9767ffa5b6720a13b3d741630852" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal">{</highlight></codeline>
<codeline lineno="69" refid="group__DBusHashTable_1ggab0ab9767ffa5b6720a13b3d741630852a481fd0166d28da725b3e97f15192434e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="group__DBusHashTable_1ggab0ab9767ffa5b6720a13b3d741630852a481fd0166d28da725b3e97f15192434e" kindref="member">DBUS_HASH_STRING</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="70" refid="group__DBusHashTable_1ggab0ab9767ffa5b6720a13b3d741630852a26446bd9fbb15c6c381b35a810207141" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="group__DBusHashTable_1ggab0ab9767ffa5b6720a13b3d741630852a26446bd9fbb15c6c381b35a810207141" kindref="member">DBUS_HASH_INT</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="71" refid="group__DBusHashTable_1ggab0ab9767ffa5b6720a13b3d741630852a477caf35cc3676d6412c9b57f1d0f6c7" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="group__DBusHashTable_1ggab0ab9767ffa5b6720a13b3d741630852a477caf35cc3676d6412c9b57f1d0f6c7" kindref="member">DBUS_HASH_UINTPTR</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="72"><highlight class="normal">}<sp/><ref refid="group__DBusHashTable_1gab0ab9767ffa5b6720a13b3d741630852" kindref="member">DBusHashType</ref>;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal">DBUS_PRIVATE_EXPORT</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><ref refid="structDBusHashTable" kindref="compound">DBusHashTable</ref>*<sp/><ref refid="group__DBusHashTable_1ga7aa7b6054c5fbf8852bad79d372580dd" kindref="member">_dbus_hash_table_new</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="group__DBusHashTable_1gab0ab9767ffa5b6720a13b3d741630852" kindref="member">DBusHashType</ref><sp/><sp/><sp/><sp/><sp/><sp/>type,</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMemory_1ga061bcded226d76c7d7de35beaa165cb5" kindref="member">DBusFreeFunction</ref><sp/><sp/>key_free_function,</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMemory_1ga061bcded226d76c7d7de35beaa165cb5" kindref="member">DBusFreeFunction</ref><sp/><sp/>value_free_function);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><ref refid="structDBusHashTable" kindref="compound">DBusHashTable</ref>*<sp/><ref refid="group__DBusHashTable_1ga4ad4622378885e5d911c26956e174a45" kindref="member">_dbus_hash_table_ref</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="structDBusHashTable" kindref="compound">DBusHashTable</ref><sp/><sp/><sp/><sp/>*table);</highlight></codeline>
<codeline lineno="79"><highlight class="normal">DBUS_PRIVATE_EXPORT</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusHashTable_1ga5ba600e4a4ea0dac1ab3f2bbf9e1665e" kindref="member">_dbus_hash_table_unref</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="structDBusHashTable" kindref="compound">DBusHashTable</ref><sp/><sp/><sp/><sp/>*table);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusHashTable_1gad169f3790ca67f8a0adafcdc88ef7188" kindref="member">_dbus_hash_table_remove_all</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="structDBusHashTable" kindref="compound">DBusHashTable</ref><sp/><sp/><sp/><sp/>*table);</highlight></codeline>
<codeline lineno="82"><highlight class="normal">DBUS_PRIVATE_EXPORT</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusHashTable_1ga7572541c8385e86824db78459621bbc7" kindref="member">_dbus_hash_iter_init</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="structDBusHashTable" kindref="compound">DBusHashTable</ref><sp/><sp/><sp/><sp/>*table,</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusHashIter" kindref="compound">DBusHashIter</ref><sp/><sp/><sp/><sp/><sp/>*iter);</highlight></codeline>
<codeline lineno="85"><highlight class="normal">DBUS_PRIVATE_EXPORT</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref><sp/><sp/><sp/><sp/><ref refid="group__DBusHashTable_1ga64bdce3eb1c543dfb162faada65f4b78" kindref="member">_dbus_hash_iter_next</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="structDBusHashIter" kindref="compound">DBusHashIter</ref><sp/><sp/><sp/><sp/><sp/>*iter);</highlight></codeline>
<codeline lineno="87"><highlight class="normal">DBUS_PRIVATE_EXPORT</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusHashTable_1gaf189e7e9933cb0326b7e2c7b9a3a03b5" kindref="member">_dbus_hash_iter_remove_entry</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="structDBusHashIter" kindref="compound">DBusHashIter</ref><sp/><sp/><sp/><sp/><sp/>*iter);</highlight></codeline>
<codeline lineno="89"><highlight class="normal">DBUS_PRIVATE_EXPORT</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusHashTable_1ga0b774bd61c68c0e9d53ea9f187595e6b" kindref="member">_dbus_hash_iter_get_value</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="structDBusHashIter" kindref="compound">DBusHashIter</ref><sp/><sp/><sp/><sp/><sp/>*iter);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusHashTable_1ga24193343c0948019d4a302fc18bfd5d9" kindref="member">_dbus_hash_iter_set_value</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="structDBusHashIter" kindref="compound">DBusHashIter</ref><sp/><sp/><sp/><sp/><sp/>*iter,</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*value);</highlight></codeline>
<codeline lineno="93"><highlight class="normal">DBUS_PRIVATE_EXPORT</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusHashTable_1ga747442b12362dab8efab975f6c595266" kindref="member">_dbus_hash_iter_get_int_key</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="structDBusHashIter" kindref="compound">DBusHashIter</ref><sp/><sp/><sp/><sp/><sp/>*iter);</highlight></codeline>
<codeline lineno="95"><highlight class="normal">DBUS_PRIVATE_EXPORT</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><ref refid="group__DBusHashTable_1gadc314f126076580dae3bd4f7f83824ca" kindref="member">_dbus_hash_iter_get_string_key</ref><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="structDBusHashIter" kindref="compound">DBusHashIter</ref><sp/><sp/><sp/><sp/><sp/>*iter);</highlight></codeline>
<codeline lineno="97"><highlight class="normal">DBUS_PRIVATE_EXPORT</highlight></codeline>
<codeline lineno="98"><highlight class="normal">uintptr_t<sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusHashTable_1ga4df55654e028b405994d2e4d64107a27" kindref="member">_dbus_hash_iter_get_uintptr_key</ref><sp/><sp/><sp/><sp/><sp/>(<ref refid="structDBusHashIter" kindref="compound">DBusHashIter</ref><sp/><sp/><sp/><sp/><sp/>*iter);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref><sp/><sp/><sp/><sp/><ref refid="group__DBusHashTable_1gab156c35d6dd9ff6e408a835db28323fb" kindref="member">_dbus_hash_iter_lookup</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="structDBusHashTable" kindref="compound">DBusHashTable</ref><sp/><sp/><sp/><sp/>*table,</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*key,</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>create_if_not_found,</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusHashIter" kindref="compound">DBusHashIter</ref><sp/><sp/><sp/><sp/><sp/>*iter);</highlight></codeline>
<codeline lineno="103"><highlight class="normal">DBUS_PRIVATE_EXPORT</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusHashTable_1gacfadc6796f8652a5b66333800b019d30" kindref="member">_dbus_hash_table_lookup_string</ref><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="structDBusHashTable" kindref="compound">DBusHashTable</ref><sp/><sp/><sp/><sp/>*table,</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*key);</highlight></codeline>
<codeline lineno="106"><highlight class="normal">DBUS_PRIVATE_EXPORT</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusHashTable_1gafdd731ccadca43757061f9486ca8c216" kindref="member">_dbus_hash_table_lookup_int</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="structDBusHashTable" kindref="compound">DBusHashTable</ref><sp/><sp/><sp/><sp/>*table,</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>key);</highlight></codeline>
<codeline lineno="109"><highlight class="normal">DBUS_PRIVATE_EXPORT</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusHashTable_1ga5ad1c4ccc1405b449d22b69d70b67860" kindref="member">_dbus_hash_table_lookup_uintptr</ref><sp/><sp/><sp/><sp/><sp/>(<ref refid="structDBusHashTable" kindref="compound">DBusHashTable</ref><sp/><sp/><sp/><sp/>*table,</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uintptr_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>key);</highlight></codeline>
<codeline lineno="112"><highlight class="normal">DBUS_PRIVATE_EXPORT</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref><sp/><sp/><sp/><sp/><ref refid="group__DBusHashTable_1ga96ef91a7d982e77ef17a42be6acc177b" kindref="member">_dbus_hash_table_remove_string</ref><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="structDBusHashTable" kindref="compound">DBusHashTable</ref><sp/><sp/><sp/><sp/>*table,</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*key);</highlight></codeline>
<codeline lineno="115"><highlight class="normal">DBUS_PRIVATE_EXPORT</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref><sp/><sp/><sp/><sp/><ref refid="group__DBusHashTable_1ga8b9306c318909ec6a36459b9de6a77cb" kindref="member">_dbus_hash_table_remove_int</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="structDBusHashTable" kindref="compound">DBusHashTable</ref><sp/><sp/><sp/><sp/>*table,</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>key);</highlight></codeline>
<codeline lineno="118"><highlight class="normal">DBUS_PRIVATE_EXPORT</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref><sp/><sp/><sp/><sp/><ref refid="group__DBusHashTable_1ga0854d0a66204f075f5a1a9f7dbca799a" kindref="member">_dbus_hash_table_remove_uintptr</ref><sp/><sp/><sp/><sp/><sp/>(<ref refid="structDBusHashTable" kindref="compound">DBusHashTable</ref><sp/><sp/><sp/><sp/>*table,</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uintptr_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>key);</highlight></codeline>
<codeline lineno="121"><highlight class="normal">DBUS_PRIVATE_EXPORT</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref><sp/><sp/><sp/><sp/><ref refid="group__DBusHashTable_1ga2b38eb4cc88efa57435a66f70331b0b4" kindref="member">_dbus_hash_table_insert_string</ref><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="structDBusHashTable" kindref="compound">DBusHashTable</ref><sp/><sp/><sp/><sp/>*table,</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*key,</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*value);</highlight></codeline>
<codeline lineno="125"><highlight class="normal">DBUS_PRIVATE_EXPORT</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref><sp/><sp/><sp/><sp/><ref refid="group__DBusHashTable_1ga2065297d8e8e3590d2235acf7f00a6d2" kindref="member">_dbus_hash_table_insert_int</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="structDBusHashTable" kindref="compound">DBusHashTable</ref><sp/><sp/><sp/><sp/>*table,</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>key,</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*value);</highlight></codeline>
<codeline lineno="129"><highlight class="normal">DBUS_PRIVATE_EXPORT</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref><sp/><sp/><sp/><sp/><ref refid="group__DBusHashTable_1gaed7365623dcb72434f890feed28e9e42" kindref="member">_dbus_hash_table_insert_uintptr</ref><sp/><sp/><sp/><sp/><sp/>(<ref refid="structDBusHashTable" kindref="compound">DBusHashTable</ref><sp/><sp/><sp/><sp/>*table,</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uintptr_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>key,</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*value);</highlight></codeline>
<codeline lineno="133"><highlight class="normal">DBUS_PRIVATE_EXPORT</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusHashTable_1ga06555357f633c4020bbb5b78f701b39d" kindref="member">_dbus_hash_table_get_n_entries</ref><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="structDBusHashTable" kindref="compound">DBusHashTable</ref><sp/><sp/><sp/><sp/>*table);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Preallocation<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="139" refid="group__DBusHashTable_1ga175dc6ab841ed32bb6acf6e4c0df36a8" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="group__DBusHashTable_1ga175dc6ab841ed32bb6acf6e4c0df36a8" kindref="member">DBusPreallocatedHash</ref><sp/><ref refid="group__DBusHashTable_1ga175dc6ab841ed32bb6acf6e4c0df36a8" kindref="member">DBusPreallocatedHash</ref>;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal">DBUS_PRIVATE_EXPORT</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><ref refid="group__DBusHashTable_1ga175dc6ab841ed32bb6acf6e4c0df36a8" kindref="member">DBusPreallocatedHash</ref><sp/>*<ref refid="group__DBusHashTable_1ga8bc6ac0897eff9ef72b7616a89a79b49" kindref="member">_dbus_hash_table_preallocate_entry</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="structDBusHashTable" kindref="compound">DBusHashTable</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*table);</highlight></codeline>
<codeline lineno="143"><highlight class="normal">DBUS_PRIVATE_EXPORT</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusHashTable_1ga762aa8cbc471e727036b3ace47cf213b" kindref="member">_dbus_hash_table_free_preallocated_entry</ref><sp/><sp/><sp/><sp/>(<ref refid="structDBusHashTable" kindref="compound">DBusHashTable</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*table,</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusHashTable_1ga175dc6ab841ed32bb6acf6e4c0df36a8" kindref="member">DBusPreallocatedHash</ref><sp/>*preallocated);</highlight></codeline>
<codeline lineno="146"><highlight class="normal">DBUS_PRIVATE_EXPORT</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusHashTable_1gaf1cba5e6765de02d2ee29acae72b985b" kindref="member">_dbus_hash_table_insert_string_preallocated</ref><sp/>(<ref refid="structDBusHashTable" kindref="compound">DBusHashTable</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*table,</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusHashTable_1ga175dc6ab841ed32bb6acf6e4c0df36a8" kindref="member">DBusPreallocatedHash</ref><sp/>*preallocated,</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*key,</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*value);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DBUS_WIN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>DBUS_HASH_POLLABLE<sp/>DBUS_HASH_UINTPTR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>DBUS_HASH_POLLABLE<sp/>DBUS_HASH_INT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>DBusPollable</highlight></codeline>
<codeline lineno="159"><highlight class="normal">_dbus_hash_iter_get_pollable_key<sp/>(<ref refid="structDBusHashIter" kindref="compound">DBusHashIter</ref><sp/>*iter)</highlight></codeline>
<codeline lineno="160"><highlight class="normal">{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DBUS_WIN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><ref refid="structDBusSocket" kindref="compound">DBusSocket</ref><sp/>s;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>s.sock<sp/>=<sp/><ref refid="group__DBusHashTable_1ga4df55654e028b405994d2e4d64107a27" kindref="member">_dbus_hash_iter_get_uintptr_key</ref><sp/>(iter);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusHashTable_1ga747442b12362dab8efab975f6c595266" kindref="member">_dbus_hash_iter_get_int_key</ref><sp/>(iter);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal">}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="172"><highlight class="normal">_dbus_hash_table_lookup_pollable<sp/>(<ref refid="structDBusHashTable" kindref="compound">DBusHashTable</ref><sp/>*table,</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DBusPollable<sp/><sp/><sp/>key)</highlight></codeline>
<codeline lineno="174"><highlight class="normal">{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DBUS_WIN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusHashTable_1ga5ad1c4ccc1405b449d22b69d70b67860" kindref="member">_dbus_hash_table_lookup_uintptr</ref><sp/>(table,<sp/>key.sock);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusHashTable_1gafdd731ccadca43757061f9486ca8c216" kindref="member">_dbus_hash_table_lookup_int</ref><sp/>(table,<sp/>key);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal">}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="183"><highlight class="normal">_dbus_hash_table_remove_pollable<sp/>(<ref refid="structDBusHashTable" kindref="compound">DBusHashTable</ref><sp/>*table,</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DBusPollable<sp/><sp/><sp/>key)</highlight></codeline>
<codeline lineno="185"><highlight class="normal">{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DBUS_WIN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusHashTable_1ga0854d0a66204f075f5a1a9f7dbca799a" kindref="member">_dbus_hash_table_remove_uintptr</ref><sp/>(table,<sp/>key.sock);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusHashTable_1ga8b9306c318909ec6a36459b9de6a77cb" kindref="member">_dbus_hash_table_remove_int</ref><sp/>(table,<sp/>key);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal">}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="194"><highlight class="normal">_dbus_hash_table_insert_pollable<sp/>(<ref refid="structDBusHashTable" kindref="compound">DBusHashTable</ref><sp/>*table,</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DBusPollable<sp/><sp/><sp/>key,</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*value)</highlight></codeline>
<codeline lineno="197"><highlight class="normal">{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DBUS_WIN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusHashTable_1gaed7365623dcb72434f890feed28e9e42" kindref="member">_dbus_hash_table_insert_uintptr</ref><sp/>(table,<sp/>key.sock,<sp/>value);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusHashTable_1ga2065297d8e8e3590d2235acf7f00a6d2" kindref="member">_dbus_hash_table_insert_int</ref><sp/>(table,<sp/>key,<sp/>value);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal">}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><ref refid="group__DBusMacros_1gae4a9263a43f8220f6e1c0fd07cf6e59a" kindref="member">DBUS_END_DECLS</ref></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>DBUS_HASH_H<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="dbus/dbus-hash.h"/>
  </compounddef>
</doxygen>
