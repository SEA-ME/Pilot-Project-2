<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="dbus-object-tree_8h" kind="file" language="C++">
    <compoundname>dbus-object-tree.h</compoundname>
    <includes refid="dbus-connection_8h" local="no">dbus/dbus-connection.h</includes>
    <includedby refid="dbus-connection_8c" local="yes">dbus-connection.c</includedby>
    <includedby refid="dbus-message_8c" local="yes">dbus-message.c</includedby>
    <includedby refid="dbus-object-tree_8c" local="yes">dbus-object-tree.c</includedby>
    <incdepgraph>
      <node id="2287">
        <label>stdarg.h</label>
      </node>
      <node id="2288">
        <label>dbus/dbus-shared.h</label>
        <link refid="dbus-shared_8h_source"/>
      </node>
      <node id="2281">
        <label>dbus/dbus-types.h</label>
        <link refid="dbus-types_8h_source"/>
        <childnode refid="2282" relation="include">
        </childnode>
        <childnode refid="2283" relation="include">
        </childnode>
      </node>
      <node id="2277">
        <label>dbus-object-tree.h</label>
        <link refid="dbus-object-tree_8h"/>
        <childnode refid="2278" relation="include">
        </childnode>
      </node>
      <node id="2286">
        <label>dbus/dbus-message.h</label>
        <link refid="dbus-message_8h_source"/>
        <childnode refid="2280" relation="include">
        </childnode>
        <childnode refid="2281" relation="include">
        </childnode>
        <childnode refid="2283" relation="include">
        </childnode>
        <childnode refid="2285" relation="include">
        </childnode>
        <childnode refid="2279" relation="include">
        </childnode>
        <childnode refid="2287" relation="include">
        </childnode>
      </node>
      <node id="2282">
        <label>stddef.h</label>
      </node>
      <node id="2285">
        <label>dbus/dbus-memory.h</label>
        <link refid="dbus-memory_8h_source"/>
        <childnode refid="2280" relation="include">
        </childnode>
        <childnode refid="2282" relation="include">
        </childnode>
      </node>
      <node id="2279">
        <label>dbus/dbus-errors.h</label>
        <link refid="dbus-errors_8h_source"/>
        <childnode refid="2280" relation="include">
        </childnode>
        <childnode refid="2281" relation="include">
        </childnode>
        <childnode refid="2284" relation="include">
        </childnode>
      </node>
      <node id="2280">
        <label>dbus/dbus-macros.h</label>
        <link refid="dbus-macros_8h_source"/>
      </node>
      <node id="2284">
        <label>dbus/dbus-protocol.h</label>
        <link refid="dbus-protocol_8h_source"/>
      </node>
      <node id="2278">
        <label>dbus/dbus-connection.h</label>
        <link refid="dbus-connection_8h_source"/>
        <childnode refid="2279" relation="include">
        </childnode>
        <childnode refid="2285" relation="include">
        </childnode>
        <childnode refid="2286" relation="include">
        </childnode>
        <childnode refid="2288" relation="include">
        </childnode>
      </node>
      <node id="2283">
        <label>dbus/dbus-arch-deps.h</label>
        <link refid="dbus-arch-deps_8h_source"/>
        <childnode refid="2280" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2292">
        <label>dbus-object-tree.c</label>
        <link refid="dbus-object-tree_8c_source"/>
      </node>
      <node id="2289">
        <label>dbus-object-tree.h</label>
        <link refid="dbus-object-tree_8h"/>
        <childnode refid="2290" relation="include">
        </childnode>
        <childnode refid="2291" relation="include">
        </childnode>
        <childnode refid="2292" relation="include">
        </childnode>
      </node>
      <node id="2291">
        <label>dbus-message.c</label>
        <link refid="dbus-message_8c_source"/>
      </node>
      <node id="2290">
        <label>dbus-connection.c</label>
        <link refid="dbus-connection_8c_source"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="dbus-object-tree_8h_1aa4dd033cae0cfbbca5f9d951ba956e9f" prot="public" static="no">
        <type>struct <ref refid="structDBusObjectTree" kindref="compound">DBusObjectTree</ref></type>
        <definition>typedef struct DBusObjectTree DBusObjectTree</definition>
        <argsstring></argsstring>
        <name>DBusObjectTree</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-object-tree.h" line="81" column="1" bodyfile="dbus/dbus-object-tree.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__DBusObjectTree_1ga5920f14b487122f13a3d439952d5ed2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structDBusObjectTree" kindref="compound">DBusObjectTree</ref> *</type>
        <definition>DBusObjectTree* _dbus_object_tree_new</definition>
        <argsstring>(DBusConnection *connection)</argsstring>
        <name>_dbus_object_tree_new</name>
        <param>
          <type><ref refid="structDBusConnection" kindref="compound">DBusConnection</ref> *</type>
          <declname>connection</declname>
        </param>
        <briefdescription>
<para>Creates a new object tree, representing a mapping from paths to handler vtables. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>connection</parametername>
</parameternamelist>
<parameterdescription>
<para>the connection this tree belongs to </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the new tree or <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref> if no memory </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-object-tree.h" line="32" column="1" bodyfile="dbus/dbus-object-tree.c" bodystart="92" bodyend="121"/>
        <references refid="group__DBusMemory_1gaba9d823abda7f4cadbaf5177d3b8b793" compoundref="dbus-memory_8h" startline="59">dbus_new0</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="structDBusObjectTree_1a7d7a4cd85c747b162723a121029d9580" compoundref="dbus-object-tree_8c" startline="59">DBusObjectTree::refcount</references>
        <references refid="structDBusObjectTree_1a65b58bdaad2e5d09d8366d286e46b100" compoundref="dbus-object-tree_8c" startline="60">DBusObjectTree::connection</references>
        <references refid="structDBusObjectTree_1a8d8b8d9801bb51c1f178074881249c26" compoundref="dbus-object-tree_8c" startline="62">DBusObjectTree::root</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusObjectTree_1ga144a3920922e8badf1018ce22b27d9c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structDBusObjectTree" kindref="compound">DBusObjectTree</ref> *</type>
        <definition>DBusObjectTree* _dbus_object_tree_ref</definition>
        <argsstring>(DBusObjectTree *tree)</argsstring>
        <name>_dbus_object_tree_ref</name>
        <param>
          <type><ref refid="structDBusObjectTree" kindref="compound">DBusObjectTree</ref> *</type>
          <declname>tree</declname>
        </param>
        <briefdescription>
<para>Increment the reference count. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tree</parametername>
</parameternamelist>
<parameterdescription>
<para>the object tree </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the object tree </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-object-tree.h" line="33" column="1" bodyfile="dbus/dbus-object-tree.c" bodystart="129" bodyend="136"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="148">_dbus_assert</references>
        <references refid="structDBusObjectTree_1a7d7a4cd85c747b162723a121029d9580" compoundref="dbus-object-tree_8c" startline="59">DBusObjectTree::refcount</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusObjectTree_1ga7639e273ab160c422a7cef0cda60ded5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _dbus_object_tree_unref</definition>
        <argsstring>(DBusObjectTree *tree)</argsstring>
        <name>_dbus_object_tree_unref</name>
        <param>
          <type><ref refid="structDBusObjectTree" kindref="compound">DBusObjectTree</ref> *</type>
          <declname>tree</declname>
        </param>
        <briefdescription>
<para>Decrement the reference count. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tree</parametername>
</parameternamelist>
<parameterdescription>
<para>the object tree </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-object-tree.h" line="34" column="1" bodyfile="dbus/dbus-object-tree.c" bodystart="143" bodyend="155"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="148">_dbus_assert</references>
        <references refid="structDBusObjectTree_1a7d7a4cd85c747b162723a121029d9580" compoundref="dbus-object-tree_8c" startline="59">DBusObjectTree::refcount</references>
        <references refid="group__DBusObjectTree_1ga1c51e43233ce0f3855c128f2555317eb" compoundref="dbus-object-tree_8c" startline="720" endline="726">_dbus_object_tree_free_all_unlocked</references>
        <references refid="group__DBusMemory_1ga34e666b19b015035a9a31e53da84b39a" compoundref="dbus-memory_8c" startline="701" endline="740">dbus_free</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusObjectTree_1gab3da15ee1a73d3b26008d1bce20a78a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_object_tree_register</definition>
        <argsstring>(DBusObjectTree *tree, dbus_bool_t fallback, const char **path, const DBusObjectPathVTable *vtable, void *user_data, DBusError *error)</argsstring>
        <name>_dbus_object_tree_register</name>
        <param>
          <type><ref refid="structDBusObjectTree" kindref="compound">DBusObjectTree</ref> *</type>
          <declname>tree</declname>
        </param>
        <param>
          <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
          <declname>fallback</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>path</declname>
        </param>
        <param>
          <type>const <ref refid="structDBusObjectPathVTable" kindref="compound">DBusObjectPathVTable</ref> *</type>
          <declname>vtable</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>user_data</declname>
        </param>
        <param>
          <type><ref refid="structDBusError" kindref="compound">DBusError</ref> *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>Registers a new subtree in the global object tree. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tree</parametername>
</parameternamelist>
<parameterdescription>
<para>the global object tree </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fallback</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref> to handle messages to children of this path </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>NULL-terminated array of path elements giving path to subtree </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vtable</parametername>
</parameternamelist>
<parameterdescription>
<para>the vtable used to traverse this subtree </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>user_data</parametername>
</parameternamelist>
<parameterdescription>
<para>user data to pass to methods in the vtable </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>address where an error can be returned </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> if an error (<ref refid="group__DBusProtocol_1gac32eaf0b92f798307853cd4fe0cf11c2" kindref="member">DBUS_ERROR_NO_MEMORY</ref> or <ref refid="group__DBusProtocol_1ga6a4358a62f0cd68d637532772475e576" kindref="member">DBUS_ERROR_OBJECT_PATH_IN_USE</ref>) is reported </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-object-tree.h" line="36" column="1" bodyfile="dbus/dbus-object-tree.c" bodystart="393" bodyend="436"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="148">_dbus_assert</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="structDBusObjectPathVTable_1a83464b6b8b66fb7adebd8e3bf8ff1b70" compoundref="dbus-connection_8h" startline="397">DBusObjectPathVTable::message_function</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusObjectTree_1ga3babe73ed342b6963997ef2efd73ef75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _dbus_object_tree_unregister_and_unlock</definition>
        <argsstring>(DBusObjectTree *tree, const char **path)</argsstring>
        <name>_dbus_object_tree_unregister_and_unlock</name>
        <param>
          <type><ref refid="structDBusObjectTree" kindref="compound">DBusObjectTree</ref> *</type>
          <declname>tree</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Unregisters an object subtree that was registered with the same path. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tree</parametername>
</parameternamelist>
<parameterdescription>
<para>the global object tree </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>path to the subtree (same as the one passed to <ref refid="group__DBusObjectTree_1gab3da15ee1a73d3b26008d1bce20a78a0" kindref="member">_dbus_object_tree_register()</ref>) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-object-tree.h" line="42" column="1" bodyfile="dbus/dbus-object-tree.c" bodystart="625" bodyend="679"/>
        <references refid="structDBusObjectTree_1a65b58bdaad2e5d09d8366d286e46b100" compoundref="dbus-object-tree_8c" startline="60">DBusObjectTree::connection</references>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="148">_dbus_assert</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <referencedby refid="group__DBusConnection_1ga6ae8f005dedf24c5f2df1768795392fb" compoundref="dbus-connection_8c" startline="6021" endline="6040">dbus_connection_unregister_object_path</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusObjectTree_1gad660d78a12fa207d891838863dfc6ba7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusShared_1ga8244b29230187624c24986c24edab1de" kindref="member">DBusHandlerResult</ref></type>
        <definition>DBusHandlerResult _dbus_object_tree_dispatch_and_unlock</definition>
        <argsstring>(DBusObjectTree *tree, DBusMessage *message, dbus_bool_t *found_object)</argsstring>
        <name>_dbus_object_tree_dispatch_and_unlock</name>
        <param>
          <type><ref refid="structDBusObjectTree" kindref="compound">DBusObjectTree</ref> *</type>
          <declname>tree</declname>
        </param>
        <param>
          <type><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref> *</type>
          <declname>message</declname>
        </param>
        <param>
          <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref> *</type>
          <declname>found_object</declname>
        </param>
        <briefdescription>
<para>Tries to dispatch a message by directing it to handler for the object path listed in the message header, if any. </para>        </briefdescription>
        <detaileddescription>
<para>Messages are dispatched first to the registered handler that matches the largest number of path elements; that is, message to /foo/bar/baz would go to the handler for /foo/bar before the one for /foo.</para><para><xrefsect id="todo_1_todo000043"><xreftitle>Todo</xreftitle><xrefdescription><para>thread problems</para></xrefdescription></xrefsect></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tree</parametername>
</parameternamelist>
<parameterdescription>
<para>the global object tree </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>the message to dispatch </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>found_object</parametername>
</parameternamelist>
<parameterdescription>
<para>return location for the object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>whether message was handled successfully </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-object-tree.h" line="44" column="1" bodyfile="dbus/dbus-object-tree.c" bodystart="905" bodyend="1066"/>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="group__DBusMessage_1gaf2b5b3319da838b1f1b360c04a33f153" compoundref="dbus-message_8c" startline="3237" endline="3255">dbus_message_get_path_decomposed</references>
        <references refid="structDBusObjectTree_1a65b58bdaad2e5d09d8366d286e46b100" compoundref="dbus-object-tree_8c" startline="60">DBusObjectTree::connection</references>
        <references refid="group__DBusConnectionInternals_1ga3db10d48ec16e485d5a638aacebd4ad2" compoundref="dbus-connection_8c" startline="399" endline="426">_dbus_connection_unlock</references>
        <references refid="group__DBusShared_1gga8244b29230187624c24986c24edab1dea01f00ce4578559c7b14b91256bfede7d" compoundref="dbus-shared_8h" startline="70">DBUS_HANDLER_RESULT_NEED_MEMORY</references>
        <references refid="group__DBusShared_1gga8244b29230187624c24986c24edab1deacb84b64c92055f2585fe9c29f1e5df68" compoundref="dbus-shared_8h" startline="69">DBUS_HANDLER_RESULT_NOT_YET_HANDLED</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusObjectTree_1ga4cf5a5f35d2bd18b6fa8aa58ba6b5de4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* _dbus_object_tree_get_user_data_unlocked</definition>
        <argsstring>(DBusObjectTree *tree, const char **path)</argsstring>
        <name>_dbus_object_tree_get_user_data_unlocked</name>
        <param>
          <type><ref refid="structDBusObjectTree" kindref="compound">DBusObjectTree</ref> *</type>
          <declname>tree</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Looks up the data passed to <ref refid="group__DBusObjectTree_1gab3da15ee1a73d3b26008d1bce20a78a0" kindref="member">_dbus_object_tree_register()</ref> for a handler at the given path. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tree</parametername>
</parameternamelist>
<parameterdescription>
<para>the global object tree </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>NULL-terminated array of path elements giving path to subtree </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the object&apos;s user_data or <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref> if none found </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-object-tree.h" line="47" column="1" bodyfile="dbus/dbus-object-tree.c" bodystart="1077" bodyend="1096"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="148">_dbus_assert</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <referencedby refid="group__DBusConnection_1ga08ee6e70b74c294fe24d0f391f16db24" compoundref="dbus-connection_8c" startline="6053" endline="6077">dbus_connection_get_object_path_data</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusObjectTree_1ga1c51e43233ce0f3855c128f2555317eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _dbus_object_tree_free_all_unlocked</definition>
        <argsstring>(DBusObjectTree *tree)</argsstring>
        <name>_dbus_object_tree_free_all_unlocked</name>
        <param>
          <type><ref refid="structDBusObjectTree" kindref="compound">DBusObjectTree</ref> *</type>
          <declname>tree</declname>
        </param>
        <briefdescription>
<para>Free all the handlers in the tree. </para>        </briefdescription>
        <detaileddescription>
<para>Lock on tree&apos;s connection must not be held.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tree</parametername>
</parameternamelist>
<parameterdescription>
<para>the object tree </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-object-tree.h" line="49" column="1" bodyfile="dbus/dbus-object-tree.c" bodystart="720" bodyend="726"/>
        <references refid="structDBusObjectTree_1a8d8b8d9801bb51c1f178074881249c26" compoundref="dbus-object-tree_8c" startline="62">DBusObjectTree::root</references>
        <referencedby refid="group__DBusObjectTree_1ga7639e273ab160c422a7cef0cda60ded5" compoundref="dbus-object-tree_8c" startline="143" endline="155">_dbus_object_tree_unref</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusObjectTree_1gaab7040bd1bf037d99e9bbb75d0869a2f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_object_tree_list_registered_and_unlock</definition>
        <argsstring>(DBusObjectTree *tree, const char **parent_path, char ***child_entries)</argsstring>
        <name>_dbus_object_tree_list_registered_and_unlock</name>
        <param>
          <type><ref refid="structDBusObjectTree" kindref="compound">DBusObjectTree</ref> *</type>
          <declname>tree</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>parent_path</declname>
        </param>
        <param>
          <type>char ***</type>
          <declname>child_entries</declname>
        </param>
        <briefdescription>
<para>Lists the registered fallback handlers and object path handlers at the given parent_path. </para>        </briefdescription>
        <detaileddescription>
<para>The returned array should be freed with <ref refid="group__DBusMemory_1gac200b2dbc8b3f6ecac4d42426fb97b40" kindref="member">dbus_free_string_array()</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tree</parametername>
</parameternamelist>
<parameterdescription>
<para>the object tree </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parent_path</parametername>
</parameternamelist>
<parameterdescription>
<para>the path to list the child handlers of </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>child_entries</parametername>
</parameternamelist>
<parameterdescription>
<para>returns <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>-terminated array of children </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> if no memory to allocate the child entries </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-object-tree.h" line="52" column="1" bodyfile="dbus/dbus-object-tree.c" bodystart="1208" bodyend="1227"/>
        <referencedby refid="group__DBusConnection_1ga3e9de2067d0eed66ef73230fae8d8be2" compoundref="dbus-connection_8c" startline="6090" endline="6112">dbus_connection_list_registered</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusObjectTree_1gab282b916368cd512842d3aaae31e65c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_decompose_path</definition>
        <argsstring>(const char *data, int len, char ***path, int *path_len)</argsstring>
        <name>_dbus_decompose_path</name>
        <param>
          <type>const char *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <param>
          <type>char ***</type>
          <declname>path</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>path_len</declname>
        </param>
        <briefdescription>
<para>Decompose an object path. </para>        </briefdescription>
        <detaileddescription>
<para>A path of just &quot;/&quot; is represented as an empty vector of strings. The path need not be nul terminated.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>the path data </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>the length of the path string </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>address to store new object path </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>path_len</parametername>
</parameternamelist>
<parameterdescription>
<para>length of stored path </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-object-tree.h" line="56" column="1" bodyfile="dbus/dbus-object-tree.c" bodystart="1244" bodyend="1327"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="148">_dbus_assert</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="group__DBusMemory_1gaba9d823abda7f4cadbaf5177d3b8b793" compoundref="dbus-memory_8h" startline="59">dbus_new0</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="group__DBusInternalsUtils_1gaad95864dca5140b730bc143cb2d1b024" compoundref="dbus-internals_8c" startline="565" endline="577">_dbus_memdup</references>
        <references refid="group__DBusMemory_1gac200b2dbc8b3f6ecac4d42426fb97b40" compoundref="dbus-memory_8c" startline="749" endline="764">dbus_free_string_array</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <referencedby refid="group__DBusConnection_1ga6ae8f005dedf24c5f2df1768795392fb" compoundref="dbus-connection_8c" startline="6021" endline="6040">dbus_connection_unregister_object_path</referencedby>
        <referencedby refid="group__DBusConnection_1ga08ee6e70b74c294fe24d0f391f16db24" compoundref="dbus-connection_8c" startline="6053" endline="6077">dbus_connection_get_object_path_data</referencedby>
        <referencedby refid="group__DBusConnection_1ga3e9de2067d0eed66ef73230fae8d8be2" compoundref="dbus-connection_8c" startline="6090" endline="6112">dbus_connection_list_registered</referencedby>
        <referencedby refid="group__DBusMessage_1gaf2b5b3319da838b1f1b360c04a33f153" compoundref="dbus-message_8c" startline="3237" endline="3255">dbus_message_get_path_decomposed</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>-*-<sp/>mode:<sp/>C;<sp/>c-file-style:<sp/>&quot;gnu&quot;;<sp/>indent-tabs-mode:<sp/>nil;<sp/>-*-<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>dbus-object-tree.h<sp/><sp/>DBusObjectTree<sp/>(internals<sp/>of<sp/>DBusConnection)</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>2003<sp/><sp/>Red<sp/>Hat<sp/>Inc.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Academic<sp/>Free<sp/>License<sp/>version<sp/>2.1</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>This<sp/>program<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>2<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>along<sp/>with<sp/>this<sp/>program;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>Foundation,<sp/>Inc.,<sp/>51<sp/>Franklin<sp/>Street,<sp/>Fifth<sp/>Floor,<sp/>Boston,<sp/>MA<sp/><sp/>02110-1301<sp/><sp/>USA</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DBUS_OBJECT_TREE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DBUS_OBJECT_TREE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dbus/dbus-connection.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><ref refid="group__DBusMacros_1ga875146b01015e9ced22b25d76d549ab2" kindref="member">DBUS_BEGIN_DECLS</ref></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structDBusObjectTree" kindref="compound">DBusObjectTree</ref><sp/><ref refid="structDBusObjectTree" kindref="compound">DBusObjectTree</ref>;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><ref refid="structDBusObjectTree" kindref="compound">DBusObjectTree</ref>*<sp/><ref refid="group__DBusObjectTree_1ga5920f14b487122f13a3d439952d5ed2e" kindref="member">_dbus_object_tree_new</ref><sp/><sp/><sp/>(<ref refid="structDBusConnection" kindref="compound">DBusConnection</ref><sp/>*<ref refid="structDBusObjectTree_1a65b58bdaad2e5d09d8366d286e46b100" kindref="member">connection</ref>);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><ref refid="structDBusObjectTree" kindref="compound">DBusObjectTree</ref>*<sp/><ref refid="group__DBusObjectTree_1ga144a3920922e8badf1018ce22b27d9c4" kindref="member">_dbus_object_tree_ref</ref><sp/><sp/><sp/>(<ref refid="structDBusObjectTree" kindref="compound">DBusObjectTree</ref><sp/>*tree);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusObjectTree_1ga7639e273ab160c422a7cef0cda60ded5" kindref="member">_dbus_object_tree_unref</ref><sp/>(<ref refid="structDBusObjectTree" kindref="compound">DBusObjectTree</ref><sp/>*tree);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusObjectTree_1gab3da15ee1a73d3b26008d1bce20a78a0" kindref="member">_dbus_object_tree_register</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="structDBusObjectTree" kindref="compound">DBusObjectTree</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*tree,</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fallback,</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**path,</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusObjectPathVTable" kindref="compound">DBusObjectPathVTable</ref><sp/><sp/>*vtable,</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*user_data,</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusError" kindref="compound">DBusError</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*error);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusObjectTree_1ga3babe73ed342b6963997ef2efd73ef75" kindref="member">_dbus_object_tree_unregister_and_unlock</ref><sp/><sp/>(<ref refid="structDBusObjectTree" kindref="compound">DBusObjectTree</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*tree,</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**path);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><ref refid="group__DBusShared_1ga8244b29230187624c24986c24edab1de" kindref="member">DBusHandlerResult</ref><sp/><ref refid="group__DBusObjectTree_1gad660d78a12fa207d891838863dfc6ba7" kindref="member">_dbus_object_tree_dispatch_and_unlock</ref><sp/><sp/><sp/><sp/>(<ref refid="structDBusObjectTree" kindref="compound">DBusObjectTree</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*tree,</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*message,</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*found_object);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusObjectTree_1ga4cf5a5f35d2bd18b6fa8aa58ba6b5de4" kindref="member">_dbus_object_tree_get_user_data_unlocked</ref><sp/>(<ref refid="structDBusObjectTree" kindref="compound">DBusObjectTree</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*tree,</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**path);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusObjectTree_1ga1c51e43233ce0f3855c128f2555317eb" kindref="member">_dbus_object_tree_free_all_unlocked</ref><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="structDBusObjectTree" kindref="compound">DBusObjectTree</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*tree);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref><sp/><ref refid="group__DBusObjectTree_1gaab7040bd1bf037d99e9bbb75d0869a2f" kindref="member">_dbus_object_tree_list_registered_and_unlock</ref><sp/>(<ref refid="structDBusObjectTree" kindref="compound">DBusObjectTree</ref><sp/>*tree,</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>**parent_path,</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>***child_entries);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref><sp/><ref refid="group__DBusObjectTree_1gab282b916368cd512842d3aaae31e65c7" kindref="member">_dbus_decompose_path</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/>*data,</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>***path,</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*path_len);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><ref refid="group__DBusMacros_1gae4a9263a43f8220f6e1c0fd07cf6e59a" kindref="member">DBUS_END_DECLS</ref></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>DBUS_OBJECT_TREE_H<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="dbus/dbus-object-tree.h"/>
  </compounddef>
</doxygen>
