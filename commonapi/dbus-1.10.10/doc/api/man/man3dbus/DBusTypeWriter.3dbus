.TH "DBusTypeWriter" 3dbus "Thu Oct 6 2022" "Version 1.10.10" "D-Bus" \" -*- nroff -*-
.ad l
.nh
.SH NAME
DBusTypeWriter \- The type writer is an iterator for writing to a block of values\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <dbus\-marshal\-recursive\&.h>\fP
.SS "Data Fields"

.in +1c
.ti -1c
.RI "\fBdbus_uint32_t\fP \fBbyte_order\fP: 8"
.br
.RI "byte order to write values with "
.ti -1c
.RI "\fBdbus_uint32_t\fP \fBcontainer_type\fP: 8"
.br
.RI "what are we inside? (e\&.g\&. "
.ti -1c
.RI "\fBdbus_uint32_t\fP \fBtype_pos_is_expectation\fP: 1"
.br
.RI "type_pos can be either an insertion point for or an expected next type "
.ti -1c
.RI "\fBdbus_uint32_t\fP \fBenabled\fP: 1"
.br
.RI "whether to write values "
.ti -1c
.RI "\fBDBusString\fP * \fBtype_str\fP"
.br
.RI "where to write typecodes (or read type expectations) "
.ti -1c
.RI "int \fBtype_pos\fP"
.br
.RI "current pos in type_str "
.ti -1c
.RI "\fBDBusString\fP * \fBvalue_str\fP"
.br
.RI "where to write values "
.ti -1c
.RI "int \fBvalue_pos\fP"
.br
.RI "next position to write "
.ti -1c
.RI "union {"
.br
.ti -1c
.RI "   struct {"
.br
.ti -1c
.RI "      int \fBstart_pos\fP"
.br
.RI "position of first element in the array "
.ti -1c
.RI "      int \fBlen_pos\fP"
.br
.RI "position of length of the array "
.ti -1c
.RI "      int \fBelement_type_pos\fP"
.br
.RI "position of array element type in type_str "
.ti -1c
.RI "   } \fBarray\fP"
.br
.ti -1c
.RI "} \fBu\fP"
.br
.RI "class-specific data "
.in -1c
.SH "Detailed Description"
.PP 
The type writer is an iterator for writing to a block of values\&. 
.PP
Definition at line 64 of file dbus\-marshal\-recursive\&.h\&.
.SH "Field Documentation"
.PP 
.SS "\fBdbus_uint32_t\fP DBusTypeWriter::container_type"

.PP
what are we inside? (e\&.g\&. struct, variant, array) 
.PP
Definition at line 68 of file dbus\-marshal\-recursive\&.h\&.
.PP
Referenced by _dbus_type_writer_init(), _dbus_type_writer_unrecurse(), and _dbus_type_writer_write_fixed_multi()\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for D-Bus from the source code\&.
