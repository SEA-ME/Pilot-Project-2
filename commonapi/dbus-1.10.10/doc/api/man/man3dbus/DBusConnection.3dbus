.TH "DBusConnection" 3dbus "Thu Oct 6 2022" "Version 1.10.10" "D-Bus" \" -*- nroff -*-
.ad l
.nh
.SH NAME
DBusConnection \- Implementation details of \fBDBusConnection\fP\&.  

.SH SYNOPSIS
.br
.PP
.SS "Data Fields"

.in +1c
.ti -1c
.RI "\fBDBusAtomic\fP \fBrefcount\fP"
.br
.RI "Reference count\&. "
.ti -1c
.RI "\fBDBusRMutex\fP * \fBmutex\fP"
.br
.RI "Lock on the entire \fBDBusConnection\fP\&. "
.ti -1c
.RI "\fBDBusCMutex\fP * \fBdispatch_mutex\fP"
.br
.RI "Protects dispatch_acquired\&. "
.ti -1c
.RI "\fBDBusCondVar\fP * \fBdispatch_cond\fP"
.br
.RI "Notify when dispatch_acquired is available\&. "
.ti -1c
.RI "\fBDBusCMutex\fP * \fBio_path_mutex\fP"
.br
.RI "Protects io_path_acquired\&. "
.ti -1c
.RI "\fBDBusCondVar\fP * \fBio_path_cond\fP"
.br
.RI "Notify when io_path_acquired is available\&. "
.ti -1c
.RI "\fBDBusList\fP * \fBoutgoing_messages\fP"
.br
.RI "Queue of messages we need to send, send the end of the list first\&. "
.ti -1c
.RI "\fBDBusList\fP * \fBincoming_messages\fP"
.br
.RI "Queue of messages we have received, end of the list received most recently\&. "
.ti -1c
.RI "\fBDBusList\fP * \fBexpired_messages\fP"
.br
.RI "Messages that will be released when we next unlock\&. "
.ti -1c
.RI "\fBDBusMessage\fP * \fBmessage_borrowed\fP"
.br
.RI "Filled in if the first incoming message has been borrowed; dispatch_acquired will be set by the borrower\&. "
.ti -1c
.RI "int \fBn_outgoing\fP"
.br
.RI "Length of outgoing queue\&. "
.ti -1c
.RI "int \fBn_incoming\fP"
.br
.RI "Length of incoming queue\&. "
.ti -1c
.RI "\fBDBusCounter\fP * \fBoutgoing_counter\fP"
.br
.RI "Counts size of outgoing messages\&. "
.ti -1c
.RI "\fBDBusTransport\fP * \fBtransport\fP"
.br
.RI "Object that sends/receives messages over network\&. "
.ti -1c
.RI "\fBDBusWatchList\fP * \fBwatches\fP"
.br
.RI "Stores active watches\&. "
.ti -1c
.RI "\fBDBusTimeoutList\fP * \fBtimeouts\fP"
.br
.RI "Stores active timeouts\&. "
.ti -1c
.RI "\fBDBusList\fP * \fBfilter_list\fP"
.br
.RI "List of filters\&. "
.ti -1c
.RI "\fBDBusRMutex\fP * \fBslot_mutex\fP"
.br
.RI "Lock on slot_list so overall connection lock need not be taken\&. "
.ti -1c
.RI "\fBDBusDataSlotList\fP \fBslot_list\fP"
.br
.RI "Data stored by allocated integer ID\&. "
.ti -1c
.RI "\fBDBusHashTable\fP * \fBpending_replies\fP"
.br
.RI "Hash of message serials to \fBDBusPendingCall\fP\&. "
.ti -1c
.RI "\fBdbus_uint32_t\fP \fBclient_serial\fP"
.br
.RI "Client serial\&. "
.ti -1c
.RI "\fBDBusList\fP * \fBdisconnect_message_link\fP"
.br
.RI "Preallocated list node for queueing the disconnection message\&. "
.ti -1c
.RI "\fBDBusWakeupMainFunction\fP \fBwakeup_main_function\fP"
.br
.RI "Function to wake up the mainloop\&. "
.ti -1c
.RI "void * \fBwakeup_main_data\fP"
.br
.RI "Application data for wakeup_main_function\&. "
.ti -1c
.RI "\fBDBusFreeFunction\fP \fBfree_wakeup_main_data\fP"
.br
.RI "free wakeup_main_data "
.ti -1c
.RI "\fBDBusDispatchStatusFunction\fP \fBdispatch_status_function\fP"
.br
.RI "Function on dispatch status changes\&. "
.ti -1c
.RI "void * \fBdispatch_status_data\fP"
.br
.RI "Application data for dispatch_status_function\&. "
.ti -1c
.RI "\fBDBusFreeFunction\fP \fBfree_dispatch_status_data\fP"
.br
.RI "free dispatch_status_data "
.ti -1c
.RI "\fBDBusDispatchStatus\fP \fBlast_dispatch_status\fP"
.br
.RI "The last dispatch status we reported to the application\&. "
.ti -1c
.RI "\fBDBusObjectTree\fP * \fBobjects\fP"
.br
.RI "Object path handlers registered with this connection\&. "
.ti -1c
.RI "char * \fBserver_guid\fP"
.br
.RI "GUID of server if we are in shared_connections, \fBNULL\fP if server GUID is unknown or connection is private\&. "
.ti -1c
.RI "\fBdbus_bool_t\fP \fBdispatch_acquired\fP"
.br
.RI "Someone has dispatch path (can drain incoming queue) "
.ti -1c
.RI "\fBdbus_bool_t\fP \fBio_path_acquired\fP"
.br
.RI "Someone has transport io path (can use the transport to read/write messages) "
.ti -1c
.RI "unsigned int \fBshareable\fP: 1"
.br
.RI "\fBTRUE\fP if libdbus owns a reference to the connection and can return it from \fBdbus_connection_open()\fP more than once "
.ti -1c
.RI "unsigned int \fBexit_on_disconnect\fP: 1"
.br
.RI "If \fBTRUE\fP, exit after handling disconnect signal\&. "
.ti -1c
.RI "unsigned int \fBroute_peer_messages\fP: 1"
.br
.RI "If \fBTRUE\fP, if org\&.freedesktop\&.DBus\&.Peer messages have a bus name, don't handle them automatically\&. "
.ti -1c
.RI "unsigned int \fBdisconnected_message_arrived\fP: 1"
.br
.RI "We popped or are dispatching the disconnected message\&. "
.ti -1c
.RI "unsigned int \fBdisconnected_message_processed\fP: 1"
.br
.RI "We did our default handling of the disconnected message, such as closing the connection\&. "
.ti -1c
.RI "unsigned int \fBhave_connection_lock\fP: 1"
.br
.RI "Used to check locking\&. "
.in -1c
.SH "Detailed Description"
.PP 
Implementation details of \fBDBusConnection\fP\&. 

All fields are private\&. 
.PP
Definition at line 256 of file dbus\-connection\&.c\&.
.SH "Field Documentation"
.PP 
.SS "\fBdbus_uint32_t\fP DBusConnection::client_serial"

.PP
Client serial\&. Increments each time a message is sent 
.PP
Definition at line 291 of file dbus\-connection\&.c\&.
.SS "unsigned int DBusConnection::disconnected_message_arrived"

.PP
We popped or are dispatching the disconnected message\&. if the disconnect_message_link is NULL then we queued it, but this flag is whether it got to the head of the queue\&. 
.PP
Definition at line 321 of file dbus\-connection\&.c\&.
.SS "\fBDBusList\fP* DBusConnection::expired_messages"

.PP
Messages that will be released when we next unlock\&. 
.PP
Definition at line 269 of file dbus\-connection\&.c\&.
.PP
Referenced by _dbus_connection_message_sent_unlocked(), and _dbus_connection_unlock()\&.
.SS "\fBDBusList\fP* DBusConnection::filter_list"

.PP
List of filters\&. 
.PP
Definition at line 284 of file dbus\-connection\&.c\&.
.PP
Referenced by dbus_connection_add_filter(), and dbus_connection_remove_filter()\&.
.SS "\fBDBusList\fP* DBusConnection::incoming_messages"

.PP
Queue of messages we have received, end of the list received most recently\&. 
.PP
Definition at line 268 of file dbus\-connection\&.c\&.
.PP
Referenced by _dbus_connection_queue_received_message_link(), _dbus_connection_queue_synthesized_message_link(), and dbus_connection_steal_borrowed_message()\&.
.SS "\fBDBusDispatchStatus\fP DBusConnection::last_dispatch_status"

.PP
The last dispatch status we reported to the application\&. 
.PP
Definition at line 302 of file dbus\-connection\&.c\&.
.SS "int DBusConnection::n_incoming"

.PP
Length of incoming queue\&. 
.PP
Definition at line 276 of file dbus\-connection\&.c\&.
.PP
Referenced by _dbus_connection_queue_received_message_link(), _dbus_connection_queue_synthesized_message_link(), dbus_connection_get_outgoing_size(), and dbus_connection_steal_borrowed_message()\&.
.SS "int DBusConnection::n_outgoing"

.PP
Length of outgoing queue\&. 
.PP
Definition at line 275 of file dbus\-connection\&.c\&.
.PP
Referenced by _dbus_connection_do_iteration_unlocked(), _dbus_connection_message_sent_unlocked(), and dbus_connection_get_outgoing_size()\&.
.SS "\fBDBusCounter\fP* DBusConnection::outgoing_counter"

.PP
Counts size of outgoing messages\&. 
.PP
Definition at line 278 of file dbus\-connection\&.c\&.
.PP
Referenced by _dbus_connection_message_sent_unlocked(), dbus_connection_get_outgoing_size(), and dbus_connection_get_outgoing_unix_fds()\&.
.SS "\fBDBusList\fP* DBusConnection::outgoing_messages"

.PP
Queue of messages we need to send, send the end of the list first\&. 
.PP
Definition at line 267 of file dbus\-connection\&.c\&.
.PP
Referenced by _dbus_connection_get_message_to_send(), _dbus_connection_has_messages_to_send_unlocked(), and _dbus_connection_message_sent_unlocked()\&.
.SS "\fBDBusHashTable\fP* DBusConnection::pending_replies"

.PP
Hash of message serials to \fBDBusPendingCall\fP\&. 
.PP
Definition at line 289 of file dbus\-connection\&.c\&.
.PP
Referenced by _dbus_connection_queue_received_message_link()\&.
.SS "\fBDBusAtomic\fP DBusConnection::refcount"

.PP
Reference count\&. 
.PP
Definition at line 258 of file dbus\-connection\&.c\&.
.PP
Referenced by _dbus_connection_close_if_only_one_ref(), _dbus_connection_ref_unlocked(), _dbus_connection_unref_unlocked(), dbus_connection_ref(), and dbus_connection_unref()\&.
.SS "\fBDBusTimeoutList\fP* DBusConnection::timeouts"

.PP
Stores active timeouts\&. 
.PP
Definition at line 282 of file dbus\-connection\&.c\&.
.PP
Referenced by dbus_connection_set_timeout_functions()\&.
.SS "\fBDBusTransport\fP* DBusConnection::transport"

.PP
Object that sends/receives messages over network\&. 
.PP
Definition at line 280 of file dbus\-connection\&.c\&.
.PP
Referenced by _dbus_connection_get_pending_fds_count(), _dbus_connection_queue_received_message_link(), _dbus_connection_set_pending_fds_function(), dbus_connection_can_send_type(), dbus_connection_get_adt_audit_session_data(), dbus_connection_get_is_anonymous(), dbus_connection_get_is_authenticated(), dbus_connection_get_max_message_size(), dbus_connection_get_max_message_unix_fds(), dbus_connection_get_max_received_size(), dbus_connection_get_max_received_unix_fds(), dbus_connection_get_outgoing_size(), dbus_connection_get_outgoing_unix_fds(), dbus_connection_get_server_id(), dbus_connection_get_unix_fd(), dbus_connection_get_unix_process_id(), dbus_connection_get_unix_user(), dbus_connection_get_windows_user(), dbus_connection_send(), dbus_connection_send_preallocated(), dbus_connection_send_with_reply(), dbus_connection_send_with_reply_and_block(), dbus_connection_send_with_reply_set_notify(), dbus_connection_set_allow_anonymous(), dbus_connection_set_max_message_size(), dbus_connection_set_max_message_unix_fds(), dbus_connection_set_max_received_size(), dbus_connection_set_max_received_unix_fds(), dbus_connection_set_unix_user_function(), and dbus_connection_set_windows_user_function()\&.
.SS "\fBDBusWatchList\fP* DBusConnection::watches"

.PP
Stores active watches\&. 
.PP
Definition at line 281 of file dbus\-connection\&.c\&.
.PP
Referenced by dbus_connection_set_watch_functions()\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for D-Bus from the source code\&.
