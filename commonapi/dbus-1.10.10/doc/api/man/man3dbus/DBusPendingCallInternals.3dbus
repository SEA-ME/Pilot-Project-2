.TH "DBusPendingCallInternals" 3dbus "Thu Oct 6 2022" "Version 1.10.10" "D-Bus" \" -*- nroff -*-
.ad l
.nh
.SH NAME
DBusPendingCallInternals \- \fBDBusPendingCall\fP private implementation details\&.  

.SH SYNOPSIS
.br
.PP
.SS "Data Structures"

.in +1c
.ti -1c
.RI "struct \fBDBusPendingCall\fP"
.br
.RI "Implementation details of \fBDBusPendingCall\fP - all fields are private\&. "
.in -1c
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBCONNECTION_LOCK\fP(connection)   \fB_dbus_connection_lock\fP(connection)"
.br
.RI "Internals of \fBDBusPendingCall\fP\&. "
.ti -1c
.RI "#define \fBCONNECTION_UNLOCK\fP(connection)   \fB_dbus_connection_unlock\fP(connection)"
.br
.RI "shorter and more visible way to write \fB_dbus_connection_unlock()\fP "
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBDBusPendingCall\fP * \fB_dbus_pending_call_new_unlocked\fP (\fBDBusConnection\fP *connection, int timeout_milliseconds, \fBDBusTimeoutHandler\fP timeout_handler)"
.br
.RI "Creates a new pending reply object\&. "
.ti -1c
.RI "void \fB_dbus_pending_call_set_reply_unlocked\fP (\fBDBusPendingCall\fP *pending, \fBDBusMessage\fP *message)"
.br
.RI "Sets the reply of a pending call with the given message, or if the message is \fBNULL\fP, by timing out the pending call\&. "
.ti -1c
.RI "void \fB_dbus_pending_call_complete\fP (\fBDBusPendingCall\fP *pending)"
.br
.RI "Calls notifier function for the pending call and sets the call to completed\&. "
.ti -1c
.RI "void \fB_dbus_pending_call_queue_timeout_error_unlocked\fP (\fBDBusPendingCall\fP *pending, \fBDBusConnection\fP *connection)"
.br
.RI "If the pending call hasn't been timed out, add its timeout error reply to the connection's incoming message queue\&. "
.ti -1c
.RI "\fBdbus_bool_t\fP \fB_dbus_pending_call_is_timeout_added_unlocked\fP (\fBDBusPendingCall\fP *pending)"
.br
.RI "Checks to see if a timeout has been added\&. "
.ti -1c
.RI "void \fB_dbus_pending_call_set_timeout_added_unlocked\fP (\fBDBusPendingCall\fP *pending, \fBdbus_bool_t\fP is_added)"
.br
.RI "Sets wether the timeout has been added\&. "
.ti -1c
.RI "\fBDBusTimeout\fP * \fB_dbus_pending_call_get_timeout_unlocked\fP (\fBDBusPendingCall\fP *pending)"
.br
.RI "Retrives the timeout\&. "
.ti -1c
.RI "\fBdbus_uint32_t\fP \fB_dbus_pending_call_get_reply_serial_unlocked\fP (\fBDBusPendingCall\fP *pending)"
.br
.RI "Gets the reply's serial number\&. "
.ti -1c
.RI "void \fB_dbus_pending_call_set_reply_serial_unlocked\fP (\fBDBusPendingCall\fP *pending, \fBdbus_uint32_t\fP serial)"
.br
.RI "Sets the reply's serial number\&. "
.ti -1c
.RI "\fBDBusConnection\fP * \fB_dbus_pending_call_get_connection_and_lock\fP (\fBDBusPendingCall\fP *pending)"
.br
.RI "Gets the connection associated with this pending call\&. "
.ti -1c
.RI "\fBDBusConnection\fP * \fB_dbus_pending_call_get_connection_unlocked\fP (\fBDBusPendingCall\fP *pending)"
.br
.RI "Gets the connection associated with this pending call\&. "
.ti -1c
.RI "\fBdbus_bool_t\fP \fB_dbus_pending_call_set_timeout_error_unlocked\fP (\fBDBusPendingCall\fP *pending, \fBDBusMessage\fP *message, \fBdbus_uint32_t\fP serial)"
.br
.RI "Sets the reply message associated with the pending call to a timeout error\&. "
.ti -1c
.RI "\fBDBusPendingCall\fP * \fB_dbus_pending_call_ref_unlocked\fP (\fBDBusPendingCall\fP *pending)"
.br
.RI "Increments the reference count on a pending call, while the lock on its connection is already held\&. "
.ti -1c
.RI "void \fB_dbus_pending_call_unref_and_unlock\fP (\fBDBusPendingCall\fP *pending)"
.br
.RI "Decrements the reference count on a pending call, freeing it if the count reaches 0\&. "
.ti -1c
.RI "\fBdbus_bool_t\fP \fB_dbus_pending_call_get_completed_unlocked\fP (\fBDBusPendingCall\fP *pending)"
.br
.RI "Checks whether the pending call has received a reply yet, or not\&. "
.ti -1c
.RI "\fBdbus_bool_t\fP \fB_dbus_pending_call_set_data_unlocked\fP (\fBDBusPendingCall\fP *pending, \fBdbus_int32_t\fP slot, void *data, \fBDBusFreeFunction\fP free_data_func)"
.br
.RI "Stores a pointer on a \fBDBusPendingCall\fP, along with an optional function to be used for freeing the data when the data is set again, or when the pending call is finalized\&. "
.in -1c
.SH "Detailed Description"
.PP 
\fBDBusPendingCall\fP private implementation details\&. 

The guts of \fBDBusPendingCall\fP and its methods\&. 
.SH "Macro Definition Documentation"
.PP 
.SS "#define CONNECTION_LOCK(connection)   \fB_dbus_connection_lock\fP(connection)"

.PP
Internals of \fBDBusPendingCall\fP\&. Opaque object representing a reply message that we're waiting for\&. shorter and more visible way to write \fB_dbus_connection_lock()\fP 
.PP
Definition at line 53 of file dbus\-pending\-call\&.c\&.
.PP
Referenced by _dbus_connection_close_if_only_one_ref(), _dbus_connection_close_possibly_shared(), _dbus_connection_handle_watch(), _dbus_connection_lock(), _dbus_connection_remove_pending_call(), _dbus_pending_call_get_connection_and_lock(), _dbus_pending_call_set_data_unlocked(), dbus_connection_add_filter(), dbus_connection_borrow_message(), dbus_connection_can_send_type(), dbus_connection_close(), dbus_connection_dispatch(), dbus_connection_flush(), dbus_connection_get_adt_audit_session_data(), dbus_connection_get_dispatch_status(), dbus_connection_get_is_anonymous(), dbus_connection_get_is_authenticated(), dbus_connection_get_is_connected(), dbus_connection_get_max_message_size(), dbus_connection_get_max_message_unix_fds(), dbus_connection_get_max_received_size(), dbus_connection_get_max_received_unix_fds(), dbus_connection_get_object_path_data(), dbus_connection_get_outgoing_size(), dbus_connection_get_outgoing_unix_fds(), dbus_connection_get_server_id(), dbus_connection_get_unix_process_id(), dbus_connection_get_unix_user(), dbus_connection_get_windows_user(), dbus_connection_has_messages_to_send(), dbus_connection_list_registered(), dbus_connection_pop_message(), dbus_connection_preallocate_send(), dbus_connection_remove_filter(), dbus_connection_return_message(), dbus_connection_send(), dbus_connection_send_preallocated(), dbus_connection_send_with_reply(), dbus_connection_send_with_reply_and_block(), dbus_connection_send_with_reply_set_notify(), dbus_connection_set_allow_anonymous(), dbus_connection_set_dispatch_status_function(), dbus_connection_set_exit_on_disconnect(), dbus_connection_set_max_message_size(), dbus_connection_set_max_message_unix_fds(), dbus_connection_set_max_received_size(), dbus_connection_set_max_received_unix_fds(), dbus_connection_set_route_peer_messages(), dbus_connection_set_timeout_functions(), dbus_connection_set_unix_user_function(), dbus_connection_set_wakeup_main_function(), dbus_connection_set_watch_functions(), dbus_connection_set_windows_user_function(), dbus_connection_steal_borrowed_message(), dbus_connection_unregister_object_path(), dbus_pending_call_get_completed(), dbus_pending_call_get_data(), dbus_pending_call_set_data(), dbus_pending_call_set_notify(), and dbus_pending_call_steal_reply()\&.
.SH "Function Documentation"
.PP 
.SS "void _dbus_pending_call_complete (\fBDBusPendingCall\fP * pending)"

.PP
Calls notifier function for the pending call and sets the call to completed\&. 
.PP
\fBParameters:\fP
.RS 4
\fIpending\fP the pending call 
.RE
.PP

.PP
Definition at line 204 of file dbus\-pending\-call\&.c\&.
.PP
References _dbus_assert, DBusPendingCall::completed, dbus_pending_call_get_data(), DBusPendingCall::function, and TRUE\&.
.SS "\fBdbus_bool_t\fP _dbus_pending_call_get_completed_unlocked (\fBDBusPendingCall\fP * pending)"

.PP
Checks whether the pending call has received a reply yet, or not\&. Assumes connection lock is held\&.
.PP
\fBParameters:\fP
.RS 4
\fIpending\fP the pending call 
.RE
.PP
\fBReturns:\fP
.RS 4
\fBTRUE\fP if a reply has been received 
.RE
.PP

.PP
Definition at line 480 of file dbus\-pending\-call\&.c\&.
.PP
References DBusPendingCall::completed\&.
.SS "\fBDBusConnection\fP* _dbus_pending_call_get_connection_and_lock (\fBDBusPendingCall\fP * pending)"

.PP
Gets the connection associated with this pending call\&. 
.PP
\fBParameters:\fP
.RS 4
\fIpending\fP the pending_call 
.RE
.PP
\fBReturns:\fP
.RS 4
the connection associated with the pending call 
.RE
.PP

.PP
Definition at line 323 of file dbus\-pending\-call\&.c\&.
.PP
References _dbus_assert, DBusPendingCall::connection, CONNECTION_LOCK, and NULL\&.
.PP
Referenced by _dbus_connection_block_pending_call()\&.
.SS "\fBDBusConnection\fP* _dbus_pending_call_get_connection_unlocked (\fBDBusPendingCall\fP * pending)"

.PP
Gets the connection associated with this pending call\&. 
.PP
\fBParameters:\fP
.RS 4
\fIpending\fP the pending_call 
.RE
.PP
\fBReturns:\fP
.RS 4
the connection associated with the pending call 
.RE
.PP

.PP
Definition at line 338 of file dbus\-pending\-call\&.c\&.
.PP
References _dbus_assert, DBusPendingCall::connection, and NULL\&.
.SS "\fBdbus_uint32_t\fP _dbus_pending_call_get_reply_serial_unlocked (\fBDBusPendingCall\fP * pending)"

.PP
Gets the reply's serial number\&. 
.PP
\fBParameters:\fP
.RS 4
\fIpending\fP the pending_call 
.RE
.PP
\fBReturns:\fP
.RS 4
a serial number for the reply or 0 
.RE
.PP

.PP
Definition at line 293 of file dbus\-pending\-call\&.c\&.
.PP
References _dbus_assert, NULL, and DBusPendingCall::reply_serial\&.
.SS "\fBDBusTimeout\fP* _dbus_pending_call_get_timeout_unlocked (\fBDBusPendingCall\fP * pending)"

.PP
Retrives the timeout\&. 
.PP
\fBParameters:\fP
.RS 4
\fIpending\fP the pending_call 
.RE
.PP
\fBReturns:\fP
.RS 4
a timeout object or NULL if call has no timeout 
.RE
.PP

.PP
Definition at line 279 of file dbus\-pending\-call\&.c\&.
.PP
References _dbus_assert, NULL, and DBusPendingCall::timeout\&.
.PP
Referenced by _dbus_connection_queue_received_message_link()\&.
.SS "\fBdbus_bool_t\fP _dbus_pending_call_is_timeout_added_unlocked (\fBDBusPendingCall\fP * pending)"

.PP
Checks to see if a timeout has been added\&. 
.PP
\fBParameters:\fP
.RS 4
\fIpending\fP the pending_call 
.RE
.PP
\fBReturns:\fP
.RS 4
\fBTRUE\fP if there is a timeout or \fBFALSE\fP if not 
.RE
.PP

.PP
Definition at line 248 of file dbus\-pending\-call\&.c\&.
.PP
References _dbus_assert, NULL, and DBusPendingCall::timeout_added\&.
.PP
Referenced by _dbus_connection_queue_received_message_link()\&.
.SS "\fBDBusPendingCall\fP* _dbus_pending_call_new_unlocked (\fBDBusConnection\fP * connection, int timeout_milliseconds, \fBDBusTimeoutHandler\fP timeout_handler)"

.PP
Creates a new pending reply object\&. 
.PP
\fBParameters:\fP
.RS 4
\fIconnection\fP connection where reply will arrive 
.br
\fItimeout_milliseconds\fP length of timeout, -1 (or \fBDBUS_TIMEOUT_USE_DEFAULT\fP) for default, \fBDBUS_TIMEOUT_INFINITE\fP for no timeout 
.br
\fItimeout_handler\fP timeout handler, takes pending call as data 
.RE
.PP
\fBReturns:\fP
.RS 4
a new \fBDBusPendingCall\fP or \fBNULL\fP if no memory\&. 
.RE
.PP

.PP
Definition at line 109 of file dbus\-pending\-call\&.c\&.
.PP
References _dbus_assert, dbus_pending_call_allocate_data_slot(), and DBusPendingCall::timeout\&.
.SS "void _dbus_pending_call_queue_timeout_error_unlocked (\fBDBusPendingCall\fP * pending, \fBDBusConnection\fP * connection)"

.PP
If the pending call hasn't been timed out, add its timeout error reply to the connection's incoming message queue\&. 
.PP
\fBParameters:\fP
.RS 4
\fIpending\fP the pending call 
.br
\fIconnection\fP the connection the call was sent to 
.RE
.PP

.PP
Definition at line 228 of file dbus\-pending\-call\&.c\&.
.PP
References _dbus_assert, _dbus_connection_queue_synthesized_message_link(), DBusPendingCall::connection, NULL, and DBusPendingCall::timeout_link\&.
.SS "\fBDBusPendingCall\fP* _dbus_pending_call_ref_unlocked (\fBDBusPendingCall\fP * pending)"

.PP
Increments the reference count on a pending call, while the lock on its connection is already held\&. 
.PP
\fBParameters:\fP
.RS 4
\fIpending\fP the pending call object 
.RE
.PP
\fBReturns:\fP
.RS 4
the pending call object 
.RE
.PP

.PP
Definition at line 394 of file dbus\-pending\-call\&.c\&.
.PP
References _dbus_atomic_inc(), and DBusPendingCall::refcount\&.
.SS "\fBdbus_bool_t\fP _dbus_pending_call_set_data_unlocked (\fBDBusPendingCall\fP * pending, \fBdbus_int32_t\fP slot, void * data, \fBDBusFreeFunction\fP free_data_func)"

.PP
Stores a pointer on a \fBDBusPendingCall\fP, along with an optional function to be used for freeing the data when the data is set again, or when the pending call is finalized\&. The slot number must have been allocated with \fBdbus_pending_call_allocate_data_slot()\fP\&.
.PP
\fBParameters:\fP
.RS 4
\fIpending\fP the pending_call 
.br
\fIslot\fP the slot number 
.br
\fIdata\fP the data to store 
.br
\fIfree_data_func\fP finalizer function for the data 
.RE
.PP
\fBReturns:\fP
.RS 4
\fBTRUE\fP if there was enough memory to store the data 
.RE
.PP

.PP
Definition at line 502 of file dbus\-pending\-call\&.c\&.
.PP
References _dbus_data_slot_list_set(), DBusPendingCall::connection, CONNECTION_LOCK, CONNECTION_UNLOCK, and DBusPendingCall::slot_list\&.
.PP
Referenced by dbus_pending_call_set_data(), and dbus_pending_call_set_notify()\&.
.SS "void _dbus_pending_call_set_reply_serial_unlocked (\fBDBusPendingCall\fP * pending, \fBdbus_uint32_t\fP serial)"

.PP
Sets the reply's serial number\&. 
.PP
\fBParameters:\fP
.RS 4
\fIpending\fP the pending_call 
.br
\fIserial\fP the serial number 
.RE
.PP

.PP
Definition at line 307 of file dbus\-pending\-call\&.c\&.
.PP
References _dbus_assert, NULL, and DBusPendingCall::reply_serial\&.
.PP
Referenced by _dbus_pending_call_set_timeout_error_unlocked()\&.
.SS "void _dbus_pending_call_set_reply_unlocked (\fBDBusPendingCall\fP * pending, \fBDBusMessage\fP * message)"

.PP
Sets the reply of a pending call with the given message, or if the message is \fBNULL\fP, by timing out the pending call\&. 
.PP
\fBParameters:\fP
.RS 4
\fIpending\fP the pending call 
.br
\fImessage\fP the message to complete the call with, or \fBNULL\fP to time out the call 
.RE
.PP

.PP
Definition at line 172 of file dbus\-pending\-call\&.c\&.
.PP
References _dbus_assert, _dbus_list_clear(), DBusList::data, dbus_message_get_reply_serial(), dbus_message_get_type(), dbus_message_ref(), DBUS_MESSAGE_TYPE_ERROR, DBUS_MESSAGE_TYPE_METHOD_RETURN, NULL, DBusPendingCall::reply, DBusPendingCall::reply_serial, and DBusPendingCall::timeout_link\&.
.SS "void _dbus_pending_call_set_timeout_added_unlocked (\fBDBusPendingCall\fP * pending, \fBdbus_bool_t\fP is_added)"

.PP
Sets wether the timeout has been added\&. 
.PP
\fBParameters:\fP
.RS 4
\fIpending\fP the pending_call 
.br
\fIis_added\fP whether or not a timeout is added 
.RE
.PP

.PP
Definition at line 263 of file dbus\-pending\-call\&.c\&.
.PP
References _dbus_assert, NULL, and DBusPendingCall::timeout_added\&.
.PP
Referenced by _dbus_connection_queue_received_message_link()\&.
.SS "\fBdbus_bool_t\fP _dbus_pending_call_set_timeout_error_unlocked (\fBDBusPendingCall\fP * pending, \fBDBusMessage\fP * message, \fBdbus_uint32_t\fP serial)"

.PP
Sets the reply message associated with the pending call to a timeout error\&. 
.PP
\fBParameters:\fP
.RS 4
\fIpending\fP the pending_call 
.br
\fImessage\fP the message we are sending the error reply to 
.br
\fIserial\fP serial number for the reply 
.RE
.PP
\fBReturns:\fP
.RS 4
\fBFALSE\fP on OOM 
.RE
.PP

.PP
Definition at line 354 of file dbus\-pending\-call\&.c\&.
.PP
References _dbus_list_alloc_link(), _dbus_pending_call_set_reply_serial_unlocked(), DBUS_ERROR_NO_REPLY, dbus_message_new_error(), dbus_message_unref(), FALSE, NULL, DBusPendingCall::reply, DBusPendingCall::timeout_link, and TRUE\&.
.SS "void _dbus_pending_call_unref_and_unlock (\fBDBusPendingCall\fP * pending)"

.PP
Decrements the reference count on a pending call, freeing it if the count reaches 0\&. Assumes connection lock is already held\&.
.PP
\fBParameters:\fP
.RS 4
\fIpending\fP the pending call object 
.RE
.PP

.PP
Definition at line 457 of file dbus\-pending\-call\&.c\&.
.PP
References _dbus_assert, _dbus_atomic_dec(), and DBusPendingCall::refcount\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for D-Bus from the source code\&.
